{"version":3,"names":["_sfc_main","data","generateDateRange","dates","currentDate","Date","i","date","setDate","getDate","month","getMonth","toString","padStart","day","push","concat","cover","isHot","title","typeOptions","typeIndex","timeRange","timeText","place","tagOptions","selectedTags","maxAttendees","contentHtml","currentWordCount","isEdit","editId","onLoad","options","activity","JSON","parse","decodeURIComponent","_id","content","activity_time","formatDate","split","formatTime","location","max_attendees","tags","_a","files","findIndex","t","category","computed","canPublish","trim","Number","methods","ts","hours","getHours","minutes","getMinutes","chooseCover","_this","common_vendor","index","chooseImage","count","sizeType","sourceType","success","res","tempFilePaths","onTypeChange","e","detail","value","onTimeChange","_e$detail$value","_slicedToArray2","dateIdx","timeIdx","toggleTag","tag","idx","indexOf","splice","onEditorInput","html","pureText","text","replace","length","publishActivity","_this2","showLoading","uploadCover","Promise","resolve","reject","startsWith","nr","uploadFile","filePath","cloudPath","now","Math","random","slice","pop","fileID","fail","err","_this$timeText$split","_this$timeText$split2","dateStr","timeStr","_dateStr$split","_dateStr$split2","monthStr","dayStr","_timeStr$split","_timeStr$split2","hour","minute","currentYear","getFullYear","selectedMonth","parseInt","selectedDay","activityDate","setFullYear","activityTime","getTime","then","fileIDs","userInfo","getStorageSync","userId","hideLoading","showToast","icon","Error","callFunction","name","content_type","user_id","result","code","setTimeout","navigateBack","msg","catch","message","wx","createPage","MiniProgramPage"],"sources":["addactivities.vue","cGFnZXMvY2lyY2xlL2FkZGFjdGl2aXRpZXMvYWRkYWN0aXZpdGllcy52dWU"],"sourcesContent":["<template>\n  <view class=\"add-activity-container\">\n    <!-- 自定义渐变导航栏\n    <view class=\"custom-navbar\">\n      <view class=\"nav-back\" @tap=\"navigateBack\">\n        <text class=\"iconfont icon-arrow-left\"></text>\n      </view>\n      <text class=\"nav-title\">发布活动</text>\n    </view> -->\n\n    <!-- 原顶部渐变提示（保持不变） -->\n    <view class=\"header-gradient-overlap\">\n      <view class=\"header-gradient-fade\"></view>\n    </view>\n    <!-- 悬浮叠加的输入卡片（标题、内容、上传封面同盒） -->\n    <view class=\"section overlap-card\">\n      <input class=\"input-title\" v-model=\"title\" maxlength=\"30\" placeholder=\"清晰标题更容易被推荐哦~\" />\n      \n      <editor \n        class=\"rich-editor\"\n        :value=\"contentHtml\"\n        placeholder=\"为了让大家更好地了解活动，请介绍一下活动亮点、行程规划和注意事项等内容……\"\n        :maxlength=\"500\"  \n        @ready=\"onEditorReady\"\n        @input=\"onEditorInput\"\n      ></editor>\n      <view class=\"word-count\">已输入{{ currentWordCount }}/500字</view>\n      <!-- 上传活动封面区域放在卡片内，富文本编辑器下方 -->\n      <view class=\"cover-upload-box\">\n        <view class=\"cover-upload\" @tap=\"chooseCover\">\n          <image v-if=\"cover\" :src=\"cover\" class=\"cover-img\"></image>\n          <view v-else class=\"cover-placeholder\">\n            <text class=\"iconfont icon-tianjia\"></text>\n            <view>上传活动封面</view>\n          </view>\n        </view>\n      </view>\n    </view>\n    <!-- 活动信息区域卡片 -->\n    <view class=\"info-card\">\n      <!-- 活动类型 -->\n      <picker :range=\"typeOptions\" @change=\"onTypeChange\">\n        <view class=\"info-row\">\n          <text class=\"iconfont icon-type info-icon\"></text>\n          <text class=\"info-label\">活动类型</text>\n          <view class=\"info-value\">{{ typeOptions[typeIndex] || '请选择' }}</view>\n          <text class=\"iconfont icon-arrow-right info-arrow\"></text>\n        </view>\n      </picker>\n      <view class=\"info-divider\"></view>\n      <!-- 活动时间 -->\n      <picker mode=\"multiSelector\" :range=\"timeRange\" @change=\"onTimeChange\">\n        <view class=\"info-row\">\n          <text class=\"iconfont icon-shijian1 info-icon\"></text>\n          <text class=\"info-label\">活动时间</text>\n          <view class=\"info-value\">{{ timeText || '请选择' }}</view>\n          <text class=\"iconfont icon-arrow-right info-arrow\"></text>\n        </view>\n      </picker>\n      <view class=\"info-divider\"></view>\n      <!-- 活动地点 -->\n      <view class=\"info-row\">\n        <text class=\"iconfont icon-didiandingwei_o info-icon\"></text>\n        <text class=\"info-label\">活动地点</text>\n        <input class=\"info-value input-value\" v-model=\"place\" placeholder=\"请输入活动地点\" />\n      </view>\n      <view class=\"info-divider\"></view>\n      <!-- 最大参与人数 -->\n      <view class=\"info-row\">\n        <text class=\"iconfont icon-renshu info-icon\"></text>\n        <text class=\"info-label\">最大参与人数</text>\n        <input class=\"info-value input-value\" v-model.number=\"maxAttendees\" type=\"number\" min=\"1\" placeholder=\"请输入最大参与人数\" />\n      </view>\n      <view class=\"info-divider\"></view>\n      <!-- 活动标签 -->\n      <view class=\"info-row tag-row\">\n        <text class=\"iconfont icon-biaoqian info-icon\"></text>\n        <text class=\"info-label\">活动标签</text>\n        <view class=\"tag-list\">\n          <view\n            v-for=\"(tag, idx) in tagOptions\"\n            :key=\"idx\"\n            class=\"tag-chip\"\n            :class=\"{ active: selectedTags.includes(tag) }\"\n            @tap.stop=\"toggleTag(tag)\"\n          >{{ tag }}</view>\n        </view>\n      </view>\n    </view>\n    <!-- 发布按钮 -->\n    <view class=\"footer\">\n      <view\n        class=\"btn-publish\"\n        :class=\"{ disabled: !canPublish }\"\n        @tap=\"canPublish ? publishActivity() : null\"\n      >\n        发布\n      </view>\n    </view>\n  </view>\n</template>\n\n<script>\nexport default {\n  data() {\n\n    // 动态生成未来30天的日期数组（格式MM/DD）\n    const generateDateRange = () => {\n      const dates = [];\n      const currentDate = new Date();\n      for (let i = 0; i < 30; i++) { // 生成未来30天\n        const date = new Date(currentDate);\n        date.setDate(currentDate.getDate() + i);\n        const month = (date.getMonth() + 1).toString().padStart(2, '0');\n        const day = date.getDate().toString().padStart(2, '0');\n        dates.push(`${month}/${day}`);\n      }\n      return dates;\n    };\n\n    return {\n      cover: '',\n      isHot: true,\n      title: '',\n      typeOptions: ['官方', '社团', '学术', '体育', '娱乐', '其他'],\n      typeIndex: -1,\n      timeRange: [\n        generateDateRange(), // 动态生成的日期数组\n        ['10:00', '14:00', '18:00', '20:00'] // 固定时段选项\n      ],\n      timeText: '',\n      place: '',\n      tagOptions: ['户外', '运动', '娱乐', '交友', '学习', '比赛', '官方', '自发'],\n      selectedTags: [],\n      maxAttendees: '', // 新增：最大参与人数\n      contentHtml: '',  // 存储富文本内容\n      currentWordCount: 0 , // 当前输入字数\n      isEdit: false, // 是否为编辑状态\n      editId: '', // 新增：编辑时的活动ID\n    };\n  },\n  onLoad(options) {\n    if (options.activity) {\n      const activity = JSON.parse(decodeURIComponent(options.activity));\n      this.isEdit = true;\n      this.editId = activity._id;\n      this.title = activity.title;\n      this.contentHtml = activity.content;\n      // 处理时间回显\n      if (activity.activity_time) {\n        this.timeText = `${this.formatDate(activity.activity_time).split(' ')[0]} ${this.formatTime(activity.activity_time)}`;\n      }\n      this.place = activity.location;\n      this.maxAttendees = activity.max_attendees;\n      this.selectedTags = activity.tags;\n      this.cover = activity.files?.[0] || '';\n      // 回显类型\n      this.typeIndex = this.typeOptions.findIndex(t => t === activity.category);\n    }\n  },\n  computed: {\n    canPublish() {\n      // 编辑模式下允许部分字段不变（根据需求调整验证逻辑）\n      return this.isEdit || (\n        this.cover && \n        this.title.trim() && \n        this.contentHtml.trim() && \n        this.typeIndex !== -1 && \n        this.timeText && \n        this.place.trim() && \n        Number(this.maxAttendees) >= 1\n      );\n    }\n  },\n  methods: {\n    // 时间格式化辅助方法（用于回显时间）\n    formatDate(ts) {\n      const date = new Date(ts);\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\n      const day = date.getDate().toString().padStart(2, '0');\n      return `${month}/${day}`;\n    },\n    formatTime(ts) {\n      const date = new Date(ts);\n      const hours = date.getHours().toString().padStart(2, '0');\n      const minutes = date.getMinutes().toString().padStart(2, '0');\n      return `${hours}:${minutes}`;\n    },\n    chooseCover() {\n      uni.chooseImage({\n        count: 1,\n        sizeType: ['compressed'],\n        sourceType: ['album', 'camera'],\n        success: (res) => {\n          this.cover = res.tempFilePaths[0];\n        }\n      });\n    },\n    onTypeChange(e) {\n      this.typeIndex = e.detail.value;\n    },\n    onTimeChange(e) {\n      const [dateIdx, timeIdx] = e.detail.value;\n      this.timeText = `${this.timeRange[0][dateIdx]} ${this.timeRange[1][timeIdx]}`;\n    },\n    toggleTag(tag) {\n      const idx = this.selectedTags.indexOf(tag);\n      if (idx > -1) {\n        this.selectedTags.splice(idx, 1);\n      } else {\n        this.selectedTags.push(tag);\n      }\n    },\n    // 编辑器输入事件\n    onEditorInput(e) {\n      this.contentHtml = e.detail.html;  // 通过事件获取最新内容\n      const pureText = e.detail.text.replace(/<[^>]+>/g, '');\n      this.currentWordCount = pureText.length;\n    },\n    publishActivity() {\n      if (!this.canPublish) return;\n      \n      uni.showLoading({ title: this.isEdit ? '更新中...' : '发布中...' });\n      \n      // 上传封面图\n      const uploadCover = new Promise((resolve, reject) => {\n        if (!this.cover || this.cover.startsWith('cloud://')) {\n          // 已经是云端图片\n          resolve([this.cover]);\n          return;\n        }\n        uniCloud.uploadFile({\n          filePath: this.cover,\n          cloudPath: `activities/${Date.now()}-${Math.random().toString(36).slice(-6)}.${this.cover.split('.').pop()}`,\n          success: res => resolve([res.fileID]),\n          fail: err => reject(err)\n        });\n      });\n      \n      // 处理时间格式\n      const [dateStr, timeStr] = this.timeText.split(' ');\n      const [monthStr, dayStr] = dateStr.split('/');\n      const [hour, minute] = timeStr.split(':');\n      const currentDate = new Date();\n      const currentYear = currentDate.getFullYear();\n      const selectedMonth = parseInt(monthStr) - 1;\n      const selectedDay = parseInt(dayStr);\n      const activityDate = new Date(currentYear, selectedMonth, selectedDay, parseInt(hour), parseInt(minute));\n      if (activityDate.getMonth() !== selectedMonth) {\n        activityDate.setFullYear(currentYear + 1);\n      }\n      const activityTime = activityDate.getTime();\n      \n      uploadCover\n        .then(fileIDs => {\n          const userInfo = uni.getStorageSync('uni-id-pages-userInfo')\n          const userId = userInfo && userInfo._id ? userInfo._id : ''\n          if (!userId) {\n            uni.hideLoading();\n            uni.showToast({ title: '请先登录', icon: 'none' });\n            return Promise.reject(new Error('请先登录'));\n          }\n          // 编辑和新建分开\n          if (this.isEdit && this.editId) {\n            return uniCloud.callFunction({\n              name: 'update-content',\n              data: {\n                _id: this.editId,\n                content_type: 'activity',\n                title: this.title,\n                category: this.typeOptions[this.typeIndex],\n                content: this.contentHtml,\n                files: fileIDs,\n                activity_time: activityTime,\n                location: this.place,\n                max_attendees: Number(this.maxAttendees),\n                user_id: userId,\n                tags: this.selectedTags\n              }\n            });\n          } else {\n            return uniCloud.callFunction({\n              name: 'add-content',\n              data: {\n                content_type: 'activity',\n                title: this.title,\n                category: this.typeOptions[this.typeIndex],\n                content: this.contentHtml,\n                files: fileIDs,\n                activity_time: activityTime,\n                location: this.place,\n                max_attendees: Number(this.maxAttendees),\n                user_id: userId,\n                tags: this.selectedTags\n              }\n            });\n          }\n        })\n        .then(res => {\n          uni.hideLoading();\n          if (res && res.result && res.result.code === 200) {\n            uni.showToast({\n              title: this.isEdit ? '更新成功' : '发布成功',\n              icon: 'success'\n            });\n            setTimeout(() => {\n              uni.navigateBack();\n            }, 800);\n          } else {\n            throw new Error(res.result.msg);\n          }\n        })\n        .catch(err => {\n          uni.hideLoading();\n          if (err && err.message !== '请先登录') {\n            uni.showToast({\n              title: err.message || (this.isEdit ? '更新失败' : '发布失败'),\n              icon: 'none'\n            });\n          }\n        });\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.add-activity-container {\n  min-height: 100vh;\n  background: #f8f9fc;\n  padding-bottom: 120rpx;\n}\n/* 自定义导航栏样式 */\n.custom-navbar {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 100rpx; /* 与原生导航栏高度一致 */\n  background: linear-gradient(90deg, #eaffd0 0%, #fffbe8 100%); /* 与页面顶部渐变一致 */\n  display: flex;\n  align-items: center;\n  padding: 0 32rpx;\n  z-index: 10; /* 确保在顶部 */\n}\n\n.nav-back {\n  font-size: 40rpx;\n  color: #222;\n  margin-right: 32rpx;\n}\n\n.nav-title {\n  font-size: 34rpx;\n  font-weight: 700;\n  color: #222;\n}\n// 顶部渐变色区域加高，底部渐变透明过渡\n.header-gradient-overlap {\n  position: relative;\n  background: linear-gradient(90deg, #eaffd0 0%, #fffbe8 100%);\n  border-radius: 0 0 48rpx 48rpx;\n  padding: 0 0 120rpx 0;\n  min-height: 260rpx;\n  z-index: 1;\n  overflow: hidden;\n}\n.header-gradient-fade {\n  position: absolute;\n  left: 0; right: 0; bottom: 0;\n  height: 40rpx;\n  background: linear-gradient(to bottom, rgba(255,255,255,0) 0%, #f8f9fc 100%);\n  z-index: 2;\n}\n// 悬浮叠加的输入卡片\n.overlap-card {\n  position: relative;\n  z-index: 3;\n  margin: -350rpx 24rpx 0 24rpx;\n  background: #fff;\n  border-radius: 24rpx;\n  box-shadow: 0 8rpx 32rpx rgba(77,124,191,0.10);\n  padding: 36rpx 28rpx 28rpx 28rpx;\n}\n.cover-upload-box {\n  margin-top: 32rpx;\n  display: flex;\n  align-items: center;\n  position: relative;\n}\n.cover-upload {\n  width: 160rpx;\n  height: 160rpx;\n  border-radius: 16rpx;\n  background: #f5f6fa;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 24rpx;\n  position: relative;\n  overflow: hidden;\n  border: 2rpx dashed #e0e0e0;\n  cursor: pointer;\n}\n.cover-img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 16rpx;\n}\n.cover-placeholder {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: #e0c97b;\n  font-size: 48rpx;\n}\n.icon-tianjia {\n  font-size: 60rpx;\n  color: #e0c97b;\n}\n.hot-badge {\n  position: absolute;\n  left: 180rpx;\n  top: 0;\n  background: #222;\n  color: #ffe37c;\n  font-size: 22rpx;\n  border-radius: 12rpx;\n  padding: 4rpx 18rpx;\n  font-weight: 700;\n  transform: translateY(-50%);\n}\n.input-title {\n  // width: 100%;\n  font-size: 34rpx;\n  font-weight: 800;\n  height: 80rpx;\n  // color: #333;\n  background: #f8f9fc;\n\t// background-color: pink;\n  border: none;\n  border-radius: 12rpx;\n  padding: 18rpx;\n  margin-bottom: 12rpx;\n}\n.input-desc {\n  width: 95%;\n  min-height: 80rpx;\n  font-size: 26rpx;\n  color: #cbcdca;\n  background: #f8f9fc;\n\t// background-color: pink;\n  border: none;\n  border-radius: 12rpx;\n  padding: 18rpx;\n}\n.rich-editor {\n  height: 200rpx;\n  //字体不倾斜\n  font-style: normal;\n}\n.word-count{\n  font-size: 24rpx;\n  color: #cbcdca;\n  margin-top: 8rpx;\n  text-align: right;\n}\n.info-card {\n  background: #fff;\n  border-radius: 24rpx;\n  margin: 32rpx 24rpx 0 24rpx;\n  box-shadow: 0 2rpx 12rpx rgba(77,124,191,0.06);\n  padding: 0 0 80rpx 0; //上 左 下 右\n}\n.info-row {\n  display: flex;\n  align-items: center;\n  padding: 0 32rpx;\n  height: 110rpx;\n  position: relative;\n}\n.info-icon {\n  font-size: 36rpx;\n  color: #b0b6be;\n  margin-right: 18rpx;\n}\n.info-label {\n  font-size: 30rpx;\n  font-family: 'AlimamaShuHeiTi-Bold' !important;\n  font-weight: 700;\n  color: #222;\n  margin-right: 18rpx;\n  min-width: 140rpx;\n}\n.info-value {\n  flex: 1;\n  font-size: 28rpx;\n  color: #b0b6be;\n  text-align: left;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n.input-value {\n  background: transparent;\n  border: none;\n  font-size: 28rpx;\n  color: #b0b6be;\n  flex: 1;\n  padding: 0;\n  margin: 0;\n}\n.info-arrow {\n  font-size: 32rpx;\n  color: #e0e0e0;\n  margin-left: 12rpx;\n}\n.info-divider {\n  height: 1rpx;\n  background: #f0f1f5;\n  margin: 0 32rpx;\n}\n.tag-row {\n  align-items: flex-start;\n  min-height: 90rpx;\n  padding-top: 18rpx;\n  padding-bottom: 18rpx;\n}\n.tag-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 18rpx;\n  margin-left: 12rpx;\n}\n.tag-chip {\n  padding: 10rpx 32rpx;\n  background: #f5f6fa;\n  border-radius: 32rpx;\n  color: #888;\n  font-size: 26rpx;\n  border: 2rpx solid transparent;\n  transition: all 0.2s;\n  font-weight: 500;\n}\n.tag-chip.active {\n  background: linear-gradient(90deg, #f7c948 0%, #f7e7b7 100%);\n  color: #c09853;\n  border-color: #f7c948;\n  font-weight: 700;\n}\n.footer {\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: #fff;\n  padding: 18rpx 32rpx 24rpx 32rpx;\n  z-index: 10;\n}\n.btn-publish {\n  width: 92%;\n  margin: 0 auto;\n  height: 88rpx;\n  background: linear-gradient(90deg, #b7f36b 0%, #ffe37c 100%);\n  color: #222;\n  font-size: 32rpx;\n  font-weight: 700;\n  border-radius: 20rpx;\n  letter-spacing: 2rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 1;\n  transition: background 0.2s, opacity 0.2s;\n}\n.btn-publish.disabled {\n  background: #b2b2b4 !important;\n  color: #dadde3 !important;\n  opacity: 0.7;\n  pointer-events: none;\n}\n</style>\n","import MiniProgramPage from 'D:/2大花/毕业设计/Compus/pages/circle/addactivities/addactivities.vue'\nwx.createPage(MiniProgramPage)"],"mappings":"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","ignoreList":[]}