{"version":3,"file":"PostCard.js","sources":["components/circle/PostCard.vue","../../../Software/hbuilder/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RDovMuWkp-iKsS_mr5XkuJrorr7orqEvQ29tcHVzL2NvbXBvbmVudHMvY2lyY2xlL1Bvc3RDYXJkLnZ1ZQ"],"sourcesContent":["<template>\r\n  <view class=\"post-card mp-rounded\" @tap=\"$emit('view-detail', post)\">\r\n    <view class=\"post-header\">\r\n      <view class=\"user-info\">\r\n        <image :src=\"post.avatar\" class=\"post-avatar mp-rounded\"></image>\r\n        <view class=\"post-info\">\r\n          <text class=\"post-name\">{{post.name}}</text>\r\n          <text class=\"post-meta\">{{post.time}}</text>\r\n        </view>\r\n      </view>\r\n      <view class=\"post-header-right\">\r\n        <text class=\"post-tag\" :class=\"post.tagClass\">{{post.tag}}</text>\r\n        <view v-if=\"isPostOwner\" class=\"more-btn clickable-mp\" @tap.stop=\"showMoreActions\">\r\n          <text class=\"iconfont icon-gengduo\"></text>\r\n        </view>\r\n      </view>\r\n    </view>\r\n    <text class=\"post-content\">{{post.content}}</text>\r\n    <view class=\"post-images\" v-if=\"post.images && post.images.length\">\r\n      <image \r\n        v-for=\"(img, idx) in post.images\" \r\n        :key=\"idx\" \r\n        :src=\"img\" \r\n        mode=\"aspectFill\" \r\n        class=\"post-image mp-rounded\"\r\n        @tap.stop=\"previewImage(post.images, idx)\"\r\n      ></image>\r\n    </view>\r\n    <view class=\"post-actions\">\r\n      <view class=\"action-item like-btn clickable-mp\" \r\n        :class=\"{ 'is-active': post.isLiked }\"\r\n        @tap.stop=\"likePost(post, idx)\" :disabled=\"post.likeLoading\">\r\n        <text class=\"action-icon iconfont icon-dianzan\"></text>\r\n        <text class=\"action-text\">{{post.likes}}</text>\r\n      </view>\r\n      <view class=\"action-item comment-btn clickable-mp\" @tap.stop=\"$emit('comment', post)\">\r\n        <text class=\"action-icon iconfont icon-icon_comment\"></text>\r\n        <text class=\"action-text\">{{post.comments}}</text>\r\n      </view>\r\n      <view class=\"action-item share-btn clickable-mp\" @tap.stop=\"$emit('share', post)\">\r\n        <text class=\"action-icon iconfont icon-fasong\"></text>\r\n        <text class=\"action-text\">分享</text>\r\n      </view>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'PostCard',\r\n  props: {\r\n    post: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  computed: {\r\n    isPostOwner() {\r\n      const userId = uni.getStorageSync('uni-id-pages-userInfo')?._id;\r\n      return userId && this.post.user_id === userId;\r\n    }\r\n  },\r\n  methods: {\r\n    previewImage(images, index) {\r\n      // 预览图片\r\n      uni.previewImage({\r\n        urls: images,\r\n        current: images[index]\r\n      });\r\n    },\r\n    // 点赞\r\n    likePost(post, index) {\r\n      if (post.likeLoading) return;\r\n      post.likeLoading = true;\r\n\r\n      const userId = uni.getStorageSync('uni-id-pages-userInfo')._id;\r\n      if (!userId) {\r\n        uni.showToast({ title: '请先登录', icon: 'none' });\r\n        post.likeLoading = false;\r\n        return;\r\n      }\r\n\r\n      // 本地先行\r\n      const originLiked = post.isLiked;\r\n      const originLikes = post.likes;\r\n\r\n      if (post.isLiked) {\r\n        // 先本地取消\r\n        post.isLiked = false;\r\n        post.likes -= 1;\r\n        // 查找点赞记录\r\n        uniCloud.database().collection('user-likes')\r\n          .where({\r\n            user_id: userId,\r\n            post_id: post._id\r\n          })\r\n          .get()\r\n          .then(res => {\r\n            if (res.result.data.length > 0) {\r\n              const likeId = res.result.data[0]._id;\r\n              // 使用Promise\r\n              Promise.all([\r\n                // 删除点赞记录\r\n                uniCloud.database().collection('user-likes')\r\n                  .doc(likeId)\r\n                  .remove(),\r\n                // 更新帖子点赞数\r\n                uniCloud.database().collection('add-content')\r\n                  .doc(post._id)\r\n                  .update({\r\n                    like_count: post.likes\r\n                  }),\r\n                // 扣除作者积分\r\n                uniCloud.database().collection('user-score')\r\n                  .add({\r\n                    user_id: post.user_id,\r\n                    score: -5,\r\n                    type: 'post_like',\r\n                    description: '帖子被取消点赞',\r\n                    related_id: post._id,\r\n                    create_time: Date.now()\r\n                  })\r\n              ])\r\n              .then(() => {\r\n                uni.showToast({ title: '已取消点赞', icon: 'none' });\r\n                post.likeLoading = false;\r\n              })\r\n              .catch(err => {\r\n                console.error('取消点赞失败:', err);\r\n                // 回滚\r\n                post.isLiked = originLiked;\r\n                post.likes = originLikes;\r\n                post.likeLoading = false;\r\n                uni.showToast({ title: '操作失败', icon: 'none' });\r\n              });\r\n            } else {\r\n              post.likeLoading = false;\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.error('查询点赞记录失败:', err);\r\n            post.isLiked = originLiked;\r\n            post.likes = originLikes;\r\n            post.likeLoading = false;\r\n            uni.showToast({ title: '操作失败', icon: 'none' });\r\n          });\r\n      } else {\r\n        // 先本地加\r\n        post.isLiked = true;\r\n        post.likes += 1;\r\n        // 使用Promise.all确保所有操作都成功\r\n        Promise.all([\r\n          // 添加点赞记录\r\n          uniCloud.database().collection('user-likes')\r\n            .add({\r\n              user_id: userId,\r\n              post_id: post._id,\r\n              create_time: Date.now()\r\n            }),\r\n          // 更新帖子点赞数\r\n          uniCloud.database().collection('add-content')\r\n            .doc(post._id)\r\n            .update({\r\n              like_count: post.likes\r\n            }),\r\n          // 给作者增加积分\r\n          uniCloud.database().collection('user-score')\r\n            .add({\r\n              user_id: post.user_id,\r\n              score: 5,\r\n              type: 'post_like',\r\n              description: '帖子获赞',\r\n              related_id: post._id,\r\n              create_time: Date.now()\r\n            })\r\n        ])\r\n        .then(() => {\r\n          uni.showToast({ title: '已点赞', icon: 'none' });\r\n          post.likeLoading = false;\r\n        })\r\n        .catch(err => {\r\n          console.error('点赞失败:', err);\r\n          // 回滚\r\n          post.isLiked = originLiked;\r\n          post.likes = originLikes;\r\n          post.likeLoading = false;\r\n          uni.showToast({ title: '操作失败', icon: 'none' });\r\n        });\r\n      }\r\n    },\r\n    showMoreActions() {\r\n      uni.showActionSheet({\r\n        itemList: ['删除帖子', '置顶帖子'],\r\n        success: (res) => {\r\n          switch (res.tapIndex) {\r\n            case 0:\r\n              this.deletePost();\r\n              break;\r\n            case 1:\r\n              this.pinPost();\r\n              break;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    deletePost() {\r\n      uni.showModal({\r\n        title: '确认删除',\r\n        content: '确定要删除这条帖子吗？',\r\n        success: (res) => {\r\n          if (res.confirm) {\r\n            // 显示加载提示\r\n            uni.showLoading({\r\n              title: '删除中...'\r\n            });\r\n            \r\n            // 获取当前用户ID\r\n            const userId = uni.getStorageSync('uni-id-pages-userInfo')?._id;\r\n            if (!userId) {\r\n              uni.hideLoading();\r\n              uni.showToast({ title: '请先登录', icon: 'none' });\r\n              return;\r\n            }\r\n\r\n            // 验证是否是帖子作者\r\n            if (userId !== this.post.user_id) {\r\n              uni.hideLoading();\r\n              uni.showToast({ title: '无权删除此帖子', icon: 'none' });\r\n              return;\r\n            }\r\n\r\n            // 删除帖子\r\n            uniCloud.database().collection('add-content')\r\n              .doc(this.post._id)\r\n              .remove()\r\n              .then(() => {\r\n                uni.hideLoading();\r\n                uni.showToast({ title: '删除成功', icon: 'success' });\r\n                // 通知父组件帖子已删除\r\n                this.$emit('post-deleted', this.post._id);\r\n              })\r\n              .catch((err) => {\r\n                uni.hideLoading();\r\n                console.error('删除帖子失败:', err);\r\n                uni.showToast({ \r\n                  title: err.message || '删除失败', \r\n                  icon: 'none' \r\n                });\r\n              });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    pinPost() {\r\n      // 先检查是否是置顶帖子\r\n      if (this.post.content_type === 'pinned') {\r\n        uni.showModal({\r\n          title: '取消置顶',\r\n          content: '确定要取消置顶吗？',\r\n          success: (res) => {\r\n            if (res.confirm) {\r\n              this.updatePinStatus(false);\r\n            }\r\n          }\r\n        });\r\n        return;\r\n      }\r\n\r\n      // 显示置顶确认对话框\r\n      uni.showModal({\r\n        title: '置顶帖子',\r\n        content: '置顶需要消耗20积分，是否继续？',\r\n        success: (res) => {\r\n          if (res.confirm) {\r\n            // 获取用户ID\r\n            const userId = uni.getStorageSync('uni-id-pages-userInfo')?._id;\r\n            if (!userId) {\r\n              uni.showToast({ title: '请先登录', icon: 'none' });\r\n              return;\r\n            }\r\n\r\n            // 显示加载提示\r\n            uni.showLoading({\r\n              title: '处理中...'\r\n            });\r\n\r\n            // 获取用户当前积分\r\n            uniCloud.database().collection('user-score')\r\n              .where({\r\n                user_id: userId\r\n              })\r\n              .get()\r\n              .then(res => {\r\n                // 计算当前总积分\r\n                const totalScore = res.result.data.reduce((sum, record) => sum + record.score, 0);\r\n                \r\n                if (totalScore < 20) {\r\n                  \r\n                  uni.hideLoading();\r\n                  uni.showToast({ \r\n                    title: '积分不足，无法置顶', \r\n                    icon: 'none' \r\n                  });\r\n                  return;\r\n                }\r\n\r\n                // 扣除积分并置顶帖子\r\n                Promise.all([\r\n                  // 记录积分变动\r\n                  uniCloud.database().collection('user-score')\r\n                    .add({\r\n                      user_id: userId,\r\n                      score: -20,\r\n                      type: 'post_pin',\r\n                      description: '帖子置顶消耗',\r\n                      related_id: this.post._id,\r\n                      create_time: Date.now()\r\n                    }),\r\n                  // 更新帖子状态\r\n                  uniCloud.database().collection('add-content')\r\n                    .doc(this.post._id)\r\n                    .update({\r\n                      content_type: 'pinned'\r\n                    })\r\n                ])\r\n                .then(() => {\r\n                  uni.hideLoading();\r\n                  uni.showToast({ \r\n                    title: '置顶成功', \r\n                    icon: 'success' \r\n                  });\r\n                  // 通知父组件帖子已更新\r\n                  this.$emit('post-updated', this.post._id);\r\n                })\r\n                .catch(err => {\r\n                  uni.hideLoading();\r\n                  console.error('置顶失败:', err);\r\n                  uni.showToast({ \r\n                    title: err.message || '置顶失败', \r\n                    icon: 'none' \r\n                  });\r\n                });\r\n              })\r\n              .catch(err => {\r\n                uni.hideLoading();\r\n                console.error('获取积分记录失败:', err);\r\n                uni.showToast({ \r\n                  title: '操作失败', \r\n                  icon: 'none' \r\n                });\r\n              });\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    // 更新置顶状态\r\n    updatePinStatus(isPinned) {\r\n      uni.showLoading({\r\n        title: '处理中...'\r\n      });\r\n\r\n      uniCloud.database().collection('add-content')\r\n        .doc(this.post._id)\r\n        .update({\r\n          content_type: isPinned ? 'pinned' : 'post'\r\n        })\r\n        .then(() => {\r\n          uni.hideLoading();\r\n          uni.showToast({ \r\n            title: isPinned ? '置顶成功' : '已取消置顶', \r\n            icon: 'success' \r\n          });\r\n          // 通知父组件帖子已更新\r\n          this.$emit('post-updated', this.post._id);\r\n        })\r\n        .catch(err => {\r\n          uni.hideLoading();\r\n          console.error('更新置顶状态失败:', err);\r\n          uni.showToast({ \r\n            title: err.message || '操作失败', \r\n            icon: 'none' \r\n          });\r\n        });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '@/styles/variables.scss';\r\n\r\n.post-card {\r\n  padding: 20rpx;\r\n  margin-bottom: 20rpx;\r\n  background-color: $white;\r\n  border-radius: $border-radius-base;\r\n  box-shadow: $shadow-sm;\r\n  transition: all $transition-base;\r\n  position: relative;\r\n  overflow: hidden;\r\n  // border: 1rpx solid rgba(0, 0, 0, 0.02);\r\n  \r\n  &:active {\r\n    transform: scale(0.98);\r\n    opacity: 0.95;\r\n  }\r\n}\r\n\r\n.post-header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 0 16rpx 0;\r\n  // margin-bottom: 16rpx;\r\n  // border-bottom: 1rpx solid rgba(0, 0, 0, 0.04);\r\n\r\n  .user-info {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12rpx;\r\n  }\r\n  \r\n  .post-avatar {\r\n    width: 76rpx;\r\n    height: 76rpx;\r\n    border-radius: $border-radius-circle;\r\n    background-color: $bg-color;\r\n    // border: 2rpx solid $extra-light-gray;\r\n    box-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.08);\r\n  }\r\n  \r\n  .post-info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 4rpx;\r\n    \r\n    .post-name {\r\n      font-size: 30rpx;\r\n      font-weight: 600;\r\n      color: $dark-gray;\r\n      line-height: 1.3;\r\n    }\r\n    \r\n    .post-meta {\r\n      font-size: 22rpx;\r\n      color: $gray;\r\n      line-height: 1.2;\r\n    }\r\n  }\r\n\r\n  .post-header-right {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 16rpx;\r\n  }\r\n\r\n  .post-tag {\r\n    padding: 4rpx 16rpx;\r\n    border-radius: $border-radius-lg;\r\n    font-size: 22rpx;\r\n    font-weight: 500;\r\n    \r\n    &.discussion {\r\n      background: rgba($primary-color, 0.1);\r\n      color: $primary-color;\r\n    }\r\n    \r\n    &.question {\r\n      background: rgba($warning-color, 0.1);\r\n      color: $warning-color;\r\n    }\r\n    \r\n    &.lost {\r\n      background: rgba($error-color, 0.1);\r\n      color: $error-color;\r\n    }\r\n    \r\n    &.pin {\r\n      background: rgba($success-color, 0.1);\r\n      color: $success-color;\r\n    }\r\n    \r\n    &.official {\r\n      background: rgba($info-color, 0.1);\r\n      color: $info-color;\r\n    }\r\n    \r\n    &.promotion {\r\n      background: rgba($purple-color, 0.1);\r\n      color: $purple-color;\r\n    }\r\n  }\r\n\r\n  .more-btn {\r\n    padding: 8rpx;\r\n    border-radius: $border-radius-circle;\r\n    transition: all $transition-fast;\r\n    \r\n    .iconfont {\r\n      font-size: 36rpx;\r\n      color: $gray;\r\n    }\r\n    \r\n    &:active {\r\n      background-color: rgba(0, 0, 0, 0.05);\r\n      transform: scale(0.95);\r\n    }\r\n  }\r\n}\r\n\r\n.post-content {\r\n  font-size: $font-size-base;\r\n  color: $dark-gray;\r\n  margin-bottom: 16rpx;\r\n  line-height: $line-height-normal;\r\n  padding-left: 10rpx;\r\n}\r\n\r\n.post-images {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 0 -6rpx 16rpx;\r\n  padding-left: 10rpx;\r\n  \r\n  .post-image {\r\n    width: calc(33.33% - 12rpx);\r\n    height: 200rpx;\r\n    margin: 6rpx;\r\n    border-radius: $border-radius-sm;\r\n    background-color: $bg-color;\r\n    transition: all $transition-fast;\r\n    \r\n    &:active {\r\n      transform: scale(0.95);\r\n    }\r\n  }\r\n}\r\n\r\n.post-actions {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  border-top: 1rpx solid rgba(0, 0, 0, 0.03);\r\n  padding-top: 16rpx;\r\n  margin-top: 10rpx;\r\n  \r\n  .action-item {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 8rpx 20rpx;\r\n    border-radius: $border-radius-lg;\r\n    transition: all $transition-fast;\r\n    \r\n    .action-icon {\r\n      font-size: $font-size-lg;\r\n      color: $gray;\r\n      margin-right: 10rpx;\r\n      transition: all $transition-fast;\r\n    }\r\n    \r\n    .action-text {\r\n      font-size: $font-size-sm;\r\n      color: $gray;\r\n      transition: all $transition-fast;\r\n    }\r\n    \r\n    &:active {\r\n      background-color: rgba(0, 0, 0, 0.03);\r\n      transform: scale(0.95);\r\n    }\r\n    \r\n    &.is-active {\r\n      .action-icon {\r\n        color: $error-color;\r\n        animation: heartBeat 0.3s ease-in-out;\r\n      }\r\n      \r\n      .action-text {\r\n        color: $error-color;\r\n      }\r\n    }\r\n  }\r\n  \r\n  .like-btn {\r\n    &:active .action-icon {\r\n      color: $error-color;\r\n      transform: scale(1.2);\r\n    }\r\n  }\r\n  \r\n  .comment-btn {\r\n    &:active .action-icon {\r\n      color: $primary-color;\r\n      transform: scale(1.2);\r\n    }\r\n  }\r\n  \r\n  .share-btn {\r\n    &:active .action-icon {\r\n      color: $success-color;\r\n      transform: scale(1.2);\r\n    }\r\n  }\r\n}\r\n\r\n@keyframes heartBeat {\r\n  0% {\r\n    transform: scale(1);\r\n  }\r\n  50% {\r\n    transform: scale(1.3);\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n  }\r\n}\r\n</style>","import Component from 'D:/2大花/毕业设计/Compus/components/circle/PostCard.vue'\nwx.createComponent(Component)"],"names":["uni","uniCloud","res"],"mappings":"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"}