{"version":3,"file":"MessageCenter.js","sources":["pages/message/MessageCenter/MessageCenter.vue","../../../Software/hbuilder/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvbWVzc2FnZS9NZXNzYWdlQ2VudGVyL01lc3NhZ2VDZW50ZXIudnVl"],"sourcesContent":["<template>\n  <view class=\"message-center-container\">\n    <!-- 顶部导航栏 -->\n    <view class=\"header\">\n      <text class=\"header-title\">消息</text>\n      <view class=\"header-settings-icon\" @tap=\"goToSettings\">\n        <!-- 齿轮图标占位符 -->\n        <text>设置</text>\n      </view>\n    </view>\n\n    <!-- 通知消息 -->\n    <view class=\"message-section notification-messages\" @tap=\"goToNotificationDetails\">\n      <view class=\"section-icon\">\n        <!-- 铃铛图标占位符 -->\n        <text>&#x1F514;</text> \n      </view>\n      <view class=\"section-content\">\n        <text class=\"section-title\">通知消息</text>\n        <text class=\"section-prompt\" v-if=\"notificationMessage.prompt\">{{ notificationMessage.prompt }}</text>\n      </view>\n      <view class=\"unread-dot\" v-if=\"notificationMessage.hasUnread\"></view>\n    </view>\n\n    <!-- 互动消息 -->\n    <view class=\"message-section interaction-messages\">\n       <view class=\"section-header\">\n         <text class=\"section-title\">互动消息</text>\n         <!-- 未读红点或计数 -->\n         <view class=\"unread-dot\" v-if=\"interactionUnreadCount > 0\">{{ interactionUnreadCount }}</view>\n       </view>\n      <scroll-view class=\"interaction-list\" scroll-y>\n        <view v-if=\"interactionMessages.length === 0 && !interactionLoading\" class=\"empty-state\">\n          <image src=\"/static/images/empty_notification.png\" mode=\"aspectFit\" class=\"empty-icon\" />\n          <text class=\"empty-text\">暂无新的互动通知</text>\n        </view>\n         <view \n           class=\"interaction-item\" \n           v-for=\"msg in interactionMessages\" \n           :key=\"msg.id\"\n           @tap=\"handleInteractionClick(msg)\"\n         >\n           <view class=\"item-icon\">\n             <!-- 互动类型图标占位符 -->\n              <text>{{ getInteractionIcon(msg.type) }}</text>\n           </view>\n           <view class=\"item-content\">\n             <text class=\"item-title\" :class=\"{'is-read': msg.isRead}\">{{ getInteractionTitle(msg.type) }}</text>\n             <text class=\"item-snippet\">{{ msg.snippet }}</text>\n           </view>\n            <view class=\"item-time\">{{ formatTime(msg.time) }}</view>\n             <view class=\"unread-dot small\" v-if=\"!msg.isRead\"></view>\n         </view>\n          <!-- 加载更多提示 -->\n          <view class=\"loading-more\" v-if=\"interactionLoading\"><text>加载中...</text></view>\n          <view class=\"loading-more\" v-else-if=\"!hasMoreInteractions && interactionMessages.length > 0\"><text>没有更多了</text></view>\n      </scroll-view>\n    </view>\n    \n    <!-- 闲鱼精选 -->\n    <view class=\"message-section selection-messages\" @tap=\"goToSelectionPage\">\n      <view class=\"section-icon\">\n         <!-- 购物袋图标占位符 -->\n        <text>&#x1F6CD;</text>\n      </view>\n      <view class=\"section-content\">\n        <text class=\"section-title\">闲鱼精选</text>\n        <text class=\"section-prompt\">{{ selectionMessage.prompt }}</text>\n      </view>\n       <view class=\"unread-dot\" v-if=\"selectionMessage.hasUnread\"></view>\n    </view>\n\n    <!-- 交易成功/评价提醒 -->\n     <view class=\"message-section review-prompts\" v-if=\"reviewPrompts.length > 0\">\n        <view class=\"section-header\">\n            <text class=\"section-title\">订单与评价</text>\n        </view>\n        <view \n            class=\"review-item\" \n            v-for=\"prompt in reviewPrompts\" \n            :key=\"prompt.id\"\n            @tap=\"goToReview(prompt.orderId)\"\n        >\n             <view class=\"item-icon\">\n                 <!-- 星星图标占位符 -->\n                 <text>&#x2B50;</text>\n             </view>\n             <view class=\"item-content\">\n                 <text class=\"item-prompt-text\">{{ prompt.text }}</text>\n             </view>\n             <view class=\"review-button\">去评价</view>\n        </view>\n     </view>\n     \n  </view>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport { onShow, onPullDownRefresh, onReachBottom } from '@dcloudio/uni-app';\n\nexport default {\n  setup() {\n    // 模拟数据\n    const notificationMessage = ref({\n      prompt: '您有待使用的权益即将到期，点击查看', // 例如优惠券、积分等\n      hasUnread: true,\n      jumpUrl: '/pages/BenefitsCenter/BenefitsCenter' // 假设有权益中心页面\n    });\n\n    const interactionMessages = ref([]); // 互动消息列表\n    const interactionUnreadCount = ref(0);\n    const interactionLoading = ref(false);\n    const hasMoreInteractions = ref(true);\n    const interactionPage = ref(1);\n\n    const selectionMessage = ref({\n      prompt: '发现更多宝贝，上闲鱼精选！',\n      hasUnread: false,\n      jumpUrl: '/pages/SelectionPage/SelectionPage' // 假设有精选页面\n    });\n\n    const reviewPrompts = ref([]); // 评价提醒列表\n\n    // 模拟获取互动消息列表\n    const loadInteractionMessages = async (isRefresh = false) => {\n      console.log('loadInteractionMessages called, isRefresh:', isRefresh);\n      if (interactionLoading.value) return;\n\n      interactionLoading.value = true;\n      if (isRefresh) {\n        interactionPage.value = 1;\n        hasMoreInteractions.value = true;\n      }\n      if (!hasMoreInteractions.value && !isRefresh) {\n          interactionLoading.value = false;\n          return;\n      }\n\n      // 模拟API调用\n      await new Promise(resolve => setTimeout(resolve, 800)); \n\n      const mockMessages = [\n        { id: 1, type: 'reply', snippet: '回复了您的评论...', isRead: false, time: Date.now(), jumpUrl: '/pages/TaskDetail/TaskDetail?id=task1#comment' },\n        { id: 2, type: 'like', snippet: '点赞了您的商品...', isRead: true, time: Date.now() - 60000, jumpUrl: '/pages/GoodsDetail/GoodsDetail?id=goods1' },\n        { id: 3, type: 'follow', snippet: '关注了您...', isRead: false, time: Date.now() - 120000, jumpUrl: '/pages/UserProfile/UserProfile?id=user1' },\n         { id: 4, type: 'reply', snippet: '回复了您的评论...', isRead: true, time: Date.now() - 180000, jumpUrl: '/pages/TaskDetail/TaskDetail?id=task2#comment' },\n        { id: 5, type: 'like', snippet: '点赞了您的商品...', isRead: true, time: Date.now() - 240000, jumpUrl: '/pages/GoodsDetail/GoodsDetail?id=goods2' },\n      ];\n      \n      const pageSize = 4; // 模拟每页加载数量\n      const start = (interactionPage.value - 1) * pageSize;\n      const end = start + pageSize;\n      const list = mockMessages.slice(start, end);\n\n      if (isRefresh) {\n        interactionMessages.value = list;\n      } else {\n        interactionMessages.value = [...interactionMessages.value, ...list];\n      }\n\n      interactionUnreadCount.value = interactionMessages.value.filter(msg => !msg.isRead).length;\n      hasMoreInteractions.value = list.length === pageSize;\n\n      if (hasMoreInteractions.value && !isRefresh) {\n        interactionPage.value++;\n      }\n\n      interactionLoading.value = false;\n      uni.stopPullDownRefresh(); // 停止页面下拉刷新动画\n    };\n\n    // 模拟获取评价提醒\n    const loadReviewPrompts = async () => {\n         console.log('loadReviewPrompts called');\n          // 模拟API调用\n         await new Promise(resolve => setTimeout(resolve, 500)); \n         \n         // 模拟数据\n         reviewPrompts.value = [\n             { id: 101, orderId: 'order_001', text: '您的订单已完成，快去给TA一个评价吧！' },\n             { id: 102, orderId: 'order_002', text: '请对本次交易进行评价。' },\n         ];\n    };\n\n    // 格式化时间\n    const formatTime = (time) => {\n      const date = new Date(time)\n      const now = new Date();\n      const diffInMinutes = Math.floor((now.getTime() - date.getTime()) / 60000);\n      \n      if (diffInMinutes < 1) return '刚刚';\n      if (diffInMinutes < 60) return `${diffInMinutes}分钟前`;\n      if (diffInMinutes < 24 * 60) return `${Math.floor(diffInMinutes / 60)}小时前`;\n      if (diffInMinutes < 7 * 24 * 60) return `${Math.floor(diffInMinutes / (24 * 60))}天前`;\n      \n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`\n    };\n\n    // 获取互动类型图标 (模拟)\n    const getInteractionIcon = (type) => {\n        const iconMap = {\n            reply: '&#x1F4AC;', // 对话气泡\n            like: '&#x2764;', // 红心\n            follow: '&#x1F464;' // 人物\n        };\n        return iconMap[type] || '&#x1F4C3;'; // 默认图标 (文件)\n    };\n\n    // 获取互动类型标题 (模拟)\n    const getInteractionTitle = (type) => {\n        const titleMap = {\n            reply: '评论和回复',\n            like: '赞和收藏',\n            follow: '新增关注'\n        };\n        return titleMap[type] || '互动通知';\n    };\n\n    // 跳转到设置页面\n    const goToSettings = () => {\n      console.log('Navigate to settings page');\n      // uni.navigateTo({ url: '/pages/MessageSettings/MessageSettings' }); // 假设有设置页面\n    };\n\n    // 跳转到通知详情页/权益中心\n    const goToNotificationDetails = () => {\n       console.log('Navigate to notification details/benefits center', notificationMessage.value.jumpUrl);\n       if(notificationMessage.value.jumpUrl) {\n            // uni.navigateTo({ url: notificationMessage.value.jumpUrl });\n       }\n    };\n\n    // 处理互动消息点击\n    const handleInteractionClick = (msg) => {\n      console.log('Handle interaction click', msg);\n      // 标记为已读（模拟）\n      msg.isRead = true;\n       interactionUnreadCount.value = interactionMessages.value.filter(m => !m.isRead).length;\n      // 跳转到关联页面\n       if(msg.jumpUrl) {\n           // uni.navigateTo({ url: msg.jumpUrl });\n       }\n    };\n\n    // 跳转到评价页面\n    const goToReview = (orderId) => {\n        console.log('Navigate to review page for order', orderId);\n        // uni.navigateTo({ url: `/pages/ReviewPage/ReviewPage?orderId=${orderId}` }); // 假设有评价页面\n    };\n\n    // 下拉刷新\n    onPullDownRefresh(() => {\n       console.log('onPullDownRefresh triggered');\n       loadInteractionMessages(true);\n    });\n\n    // 上拉加载\n    onReachBottom(() => {\n       console.log('onReachBottom triggered');\n       loadInteractionMessages(false);\n    });\n\n    onMounted(() => {\n       console.log('MessageCenter onMounted');\n       // 页面挂载后不立即加载，等待 onShow\n    });\n\n    onShow(() => {\n      console.log('MessageCenter onShow');\n      // 每次进入页面时加载数据\n      loadInteractionMessages(true); // 刷新互动消息\n      loadReviewPrompts(); // 加载评价提醒\n    });\n\n    return {\n      notificationMessage,\n      interactionMessages,\n      interactionUnreadCount,\n      interactionLoading,\n      hasMoreInteractions,\n      selectionMessage,\n      reviewPrompts,\n      formatTime,\n      getInteractionIcon,\n      getInteractionTitle,\n      goToSettings,\n      goToNotificationDetails,\n      handleInteractionClick,\n      goToReview\n    };\n  }\n};\n</script>\n\n<style scoped>\n/* 页面容器 */\n.message-center-container {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh; /* 最小高度为视口高度 */\n  background-color: #f8f8f8;\n  padding-bottom: 20rpx; /* 底部留白 */\n}\n\n/* 顶部导航栏 */\n.header {\n  height: 100rpx;\n  background-color: #ffffff;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 30rpx;\n  border-bottom: 1rpx solid #eeeeee;\n  position: sticky; /* 吸顶 */\n  top: 0;\n  z-index: 10;\n}\n\n.header-title {\n  font-size: 36rpx;\n  font-weight: bold;\n  color: #333;\n}\n\n.header-settings-icon {\n  font-size: 36rpx; /* 图标大小 */\n  color: #666; /* 图标颜色 */\n}\n\n/* 消息区域通用样式 */\n.message-section {\n  margin: 20rpx 30rpx 0; /* 上左右外边距 */\n  padding: 25rpx; /* 内边距 */\n  background-color: #ffffff;\n  border-radius: 12rpx;\n  box-shadow: 0 2rpx 8rpx rgba(0,0,0,0.05);\n  display: flex;\n  align-items: center;\n  position: relative; /* 用于定位红点 */\n}\n\n.message-section .section-icon {\n  width: 60rpx; /* 图标区域宽度 */\n  height: 60rpx;\n  margin-right: 25rpx;\n  /* background-color: #e0e0e0; /* 图标背景 */\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 36rpx; /* 模拟图标大小 */\n}\n\n.message-section .section-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.message-section .section-title {\n  font-size: 30rpx;\n  font-weight: bold;\n  color: #333333;\n  margin-bottom: 8rpx;\n}\n\n.message-section .section-prompt {\n  font-size: 26rpx;\n  color: #ff7d00; /* 强调色 */\n}\n\n/* 未读红点 */\n.unread-dot {\n  position: absolute;\n  top: 15rpx; /* 根据需要调整位置 */\n  right: 15rpx; /* 根据需要调整位置 */\n  width: 20rpx; \n  height: 20rpx;\n  background-color: #ff4d4f; /* 红色 */\n  border-radius: 50%;\n  /* border: 2rpx solid #ffffff; */\n  z-index: 5;\n}\n/* 未读红点（带数字） */\n.unread-dot.small {\n   width: 16rpx; \n   height: 16rpx;\n}\n\n.section-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    margin-bottom: 15rpx;\n}\n\n.section-header .unread-dot {\n    position: static;\n    width: auto;\n    height: auto;\n    background: none;\n    border-radius: 0;\n    color: #ff4d4f; /* 红色数字 */\n    font-size: 26rpx;\n    font-weight: bold;\n    margin-left: 10rpx;\n}\n\n/* 互动消息列表 */\n.interaction-messages {\n    flex-direction: column; /* 垂直布局 */\n    align-items: flex-start; /* 左对齐 */\n}\n\n.interaction-list {\n    width: 100%; /* 占据父容器宽度 */\n    /* height: 300rpx; /* 示例高度，可根据内容调整或使用flex */ \n}\n\n.interaction-item {\n    display: flex;\n    align-items: center;\n    padding: 15rpx 0;\n    border-bottom: 1rpx solid #f5f5f5; /* 列表项分隔线 */\n     position: relative;\n}\n\n.interaction-item .item-icon {\n    width: 50rpx;\n    height: 50rpx;\n    margin-right: 20rpx;\n    /* background-color: #d0d0d0; */\n    border-radius: 50%;\n     display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 30rpx;\n}\n\n.interaction-item .item-content {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n}\n\n.interaction-item .item-title {\n    font-size: 28rpx;\n    color: #333;\n    margin-bottom: 5rpx;\n}\n.interaction-item .item-title.is-read {\n    font-weight: normal;\n    color: #666;\n}\n\n.interaction-item .item-snippet {\n    font-size: 24rpx;\n    color: #999;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n\n.interaction-item .item-time {\n    font-size: 22rpx;\n    color: #999;\n    margin-left: 20rpx;\n    flex-shrink: 0; /* 防止时间被压缩 */\n}\n\n.empty-state {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 50rpx 0;\n  color: #999;\n  font-size: 28rpx;\n}\n.empty-icon {\n    width: 100rpx;\n    height: 100rpx;\n     margin-bottom: 15rpx;\n}\n\n/* 评价提醒样式 */\n.review-prompts {\n    flex-direction: column;\n     align-items: flex-start;\n}\n\n.review-item {\n    display: flex;\n    align-items: center;\n    padding: 15rpx 0;\n     border-bottom: 1rpx solid #f5f5f5;\n     width: 100%; /* 占据父容器宽度 */\n}\n\n.review-item .item-icon {\n    width: 50rpx;\n    height: 50rpx;\n    margin-right: 20rpx;\n    /* background-color: #ffcc00; /* 星星颜色 */ \n     border-radius: 50%;\n     display: flex;\n    justify-content: center;\n    align-items: center;\n     font-size: 30rpx;\n}\n\n.review-item .item-content {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n}\n\n.review-item .item-prompt-text {\n    font-size: 28rpx;\n    color: #333;\n}\n\n.review-button {\n    background-color: #00bfff; /* 柔和的蓝色 */\n    color: white;\n    font-size: 26rpx;\n    padding: 8rpx 20rpx;\n    border-radius: 30rpx;\n    margin-left: 20rpx;\n    flex-shrink: 0;\n}\n\n/* 加载更多提示 */\n.loading-more {\n    text-align: center;\n    padding: 20rpx;\n    font-size: 28rpx;\n    color: #999;\n}\n\n</style>","import MiniProgramPage from 'D:/2大花/毕业设计/Compus/pages/message/MessageCenter/MessageCenter.vue'\nwx.createPage(MiniProgramPage)"],"names":["ref","uni","onPullDownRefresh","onReachBottom","onMounted","onShow"],"mappings":"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"}