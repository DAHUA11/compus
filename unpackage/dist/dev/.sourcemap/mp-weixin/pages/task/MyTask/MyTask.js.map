{"version":3,"file":"MyTask.js","sources":["pages/task/MyTask/MyTask.vue","../../../Software/hbuilder/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvdGFzay9NeVRhc2svTXlUYXNrLnZ1ZQ"],"sourcesContent":["<template>\n  <view class=\"container\">\n    <!-- 测试模式按钮组 -->\n    <view class=\"test-buttons\" v-if=\"TEST_MODE\">\n      <button class=\"test-button\" @tap=\"switchTestRole('publisher')\">切换为发布者</button>\n      <button class=\"test-button\" @tap=\"switchTestRole('claimer')\">切换为接单者</button>\n      <button class=\"test-button\" @tap=\"switchTestRole('user')\">切换为普通用户</button>\n    </view>\n\n    <!-- 搜索区域 -->\n    <view class=\"search-section\">\n      <view class=\"search-box\">\n        <uni-icons type=\"search\" size=\"18\" color=\"#999999\" />\n        <input \n          type=\"text\" \n          v-model=\"searchKeyword\" \n          placeholder=\"搜索任务类型、状态、关键词\" \n          class=\"search-input\"\n          @input=\"handleSearch\"\n        />\n      </view>\n      <view class=\"filter-btn\" @tap=\"showFilterOptions\">\n        <uni-icons type=\"filter\" size=\"18\" color=\"#00BFFF\" />\n        <text>筛选</text>\n      </view>\n    </view>\n\n    <!-- 任务类型标签页 -->\n    <view class=\"tabs-section\">\n      <view \n        class=\"tab-item\" \n        :class=\"{ active: activeTab === 'published' }\"\n        @tap=\"switchTab('published')\"\n      >\n        <text>我发布的任务</text>\n      </view>\n      <view \n        class=\"tab-item\" \n        :class=\"{ active: activeTab === 'received' }\"\n        @tap=\"switchTab('received')\"\n      >\n        <text>我领取的任务</text>\n      </view>\n    </view>\n\n    <!-- 任务列表 -->\n    <scroll-view \n      class=\"task-list\" \n      scroll-y \n      @scrolltolower=\"loadMoreTasks\"\n      refresher-enabled\n      :refresher-triggered=\"isRefreshing\"\n      @refresherrefresh=\"onRefresh\"\n    >\n      <view \n        class=\"task-card\" \n        :class=\"{ 'published-card': activeTab === 'published', 'received-card': activeTab === 'received' }\"\n        v-for=\"task in filteredTasks\" \n        :key=\"task.id\"\n        @tap=\"navigateToDetail(task)\"\n      >\n        <!-- 任务类型和状态 -->\n        <view class=\"task-header\">\n          <view class=\"task-type-status\">\n            <view class=\"task-type\" :style=\"{ backgroundColor: getTaskTypeColor(task.type) }\">\n              <uni-icons :type=\"getTaskTypeIcon(task.type)\" size=\"16\" color=\"#FFFFFF\" />\n              <text>{{ getTaskTypeName(task.type) }}</text>\n            </view>\n            <view class=\"task-status\" :class=\"task.status\">\n              {{ getTaskStatusText(task.status) }}\n            </view>\n          </view>\n        </view>\n\n        <!-- 任务标题 -->\n        <view class=\"task-title\">\n          <template v-if=\"task.type === 'buy'\">求购 - {{ task.title }}</template>\n          <template v-else-if=\"task.type === 'sell'\">出 - {{ task.title }} - {{ getConditionText(task.selectedCondition) }}</template>\n          <template v-else-if=\"['express', 'takeout'].includes(task.type)\">{{ task.title }} - {{ task.pickupAddress }}</template>\n          <template v-else>{{ task.title }}</template>\n        </view>\n\n        <!-- 任务关键信息 -->\n        <view class=\"task-info\">\n          <!-- 取件地址和送达地址 - 仅在领取任务时显示 -->\n          <template v-if=\"activeTab === 'received'\">\n            <view class=\"info-item\" v-if=\"task.type === 'express' || task.type === 'takeout'\">\n              <uni-icons type=\"location\" size=\"12\" color=\"#00BFFF\" class=\"bullet\" />\n              <text class=\"label\">取件地址：</text>\n              <text class=\"value\">{{ maskAddress(task.pickupAddress) }}</text>\n            </view>\n            <view class=\"info-item\" v-if=\"task.type === 'express' || task.type === 'takeout'\">\n              <uni-icons type=\"location-filled\" size=\"12\" color=\"#00BFFF\" class=\"bullet\" />\n              <text class=\"label\">送达地址：</text>\n              <text class=\"value\">{{ maskAddress(task.deliveryAddress) }}</text>\n            </view>\n          </template>\n          \n          <!-- 物品信息 - 根据任务类型和tab显示 -->\n          <template v-if=\"(activeTab === 'published' && (task.type === 'buy' || task.type === 'sell')) || (activeTab === 'received' && (task.type === 'buy' || task.type === 'sell'))\">\n            <view class=\"info-item\">\n              <uni-icons type=\"paperplane\" size=\"12\" color=\"#00BFFF\" class=\"bullet\" />\n              <text class=\"label\">物品名称：</text>\n              <text class=\"value\">{{ task.itemName }}</text>\n            </view>\n          </template>\n\n          <!-- 悬赏金额 - 始终显示 -->\n          <view class=\"info-item\">\n            <uni-icons type=\"wallet\" size=\"12\" color=\"#00BFFF\" class=\"bullet\" />\n            <text class=\"label\">悬赏金额：</text>\n            <text class=\"value reward\">¥{{ task.reward }}</text>\n          </view>\n\n          <!-- 任务时效提醒 - 仅在领取任务时显示 -->\n          <view class=\"info-item\" v-if=\"activeTab === 'received' && (task.type === 'express' || task.type === 'takeout')\">\n            <uni-icons type=\"calendar\" size=\"12\" color=\"#FF4D4F\" class=\"bullet\" />\n            <text class=\"label\">时效提醒：</text>\n            <text class=\"value\">{{ getTimeSensitivityReminder(task.expectedDeliveryTime) }}</text>\n          </view>\n        </view>\n\n        <!-- 最新动态 -->\n        <view class=\"task-update\" v-if=\"task.latestUpdate\">\n          <uni-icons type=\"notification\" size=\"14\" color=\"#999999\" />\n          <text>{{ task.latestUpdate }}</text>\n        </view>\n\n        <!-- 操作按钮 -->\n        <view class=\"task-actions\">\n          <button \n            class=\"action-btn\" \n            v-if=\"activeTab === 'published'\"\n            @tap.stop=\"handlePublishedAction(task)\"\n          >\n            {{ getPublishedActionText(task.status) }}\n          </button>\n          <button \n            class=\"action-btn\" \n            v-if=\"activeTab === 'received'\"\n            @tap.stop=\"handleReceivedAction(task)\"\n          >\n            {{ getReceivedActionText(task.status) }}\n          </button>\n        </view>\n\n        <!-- 时间信息 -->\n        <view class=\"task-time\">\n          <text>{{ activeTab === 'published' ? '发布时间：' : '领取时间：' }}</text>\n          <text>{{ formatTime(task[activeTab === 'published' ? 'publishTime' : 'receiveTime']) }}</text>\n        </view>\n      </view>\n\n      <!-- 加载更多提示 -->\n      <view class=\"loading-more\" v-if=\"hasMore\">\n        <uni-icons type=\"spinner-cycle\" size=\"20\" color=\"#00BFFF\" />\n        <text>加载更多...</text>\n      </view>\n      <view class=\"no-more\" v-else>\n        <text>没有更多任务了</text>\n      </view>\n    </scroll-view>\n\n    <!-- 底部操作栏 -->\n    <view class=\"bottom-bar\" v-if=\"selectedTasks.length > 0\">\n      <view class=\"selected-count\">已选择 {{ selectedTasks.length }} 个任务</view>\n      <view class=\"batch-actions\">\n        <button class=\"batch-btn\" @tap=\"handleBatchAction('cancel')\">批量取消</button>\n        <button class=\"batch-btn\" @tap=\"handleBatchAction('read')\">标记已读</button>\n      </view>\n    </view>\n  </view>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      searchKeyword: '',\n      activeTab: 'published',\n      isRefreshing: false,\n      hasMore: true,\n      publishedUnread: 0,\n      receivedUnread: 0,\n      selectedTasks: [],\n      tasks: [],\n      TEST_MODE: true,\n      TEST_USER: {\n        publisher: {\n          id: 'test_publisher_id',\n          nickname: '测试发布者',\n          avatar: '/static/avatar/default.png'\n        },\n        claimer: {\n          id: 'test_claimer_id',\n          nickname: '测试接单者',\n          avatar: '/static/avatar/default.png'\n        },\n        user: {\n          id: 'test_user_id',\n          nickname: '测试用户',\n          avatar: '/static/avatar/default.png'\n        }\n      }\n    }\n  },\n  computed: {\n    filteredTasks() {\n      const keyword = this.searchKeyword.trim().toLowerCase();\n      console.log('MyTask - filteredTasks: searchKeyword:', keyword);\n      console.log('MyTask - filteredTasks: activeTab:', this.activeTab);\n      return this.tasks.filter(task => {\n        const matchesKeyword = (\n          task.title.toLowerCase().includes(keyword) ||\n          task.pickupAddress?.toLowerCase().includes(keyword) ||\n          task.deliveryAddress?.toLowerCase().includes(keyword) ||\n          task.itemName?.toLowerCase().includes(keyword)\n        );\n        const matchesTab = (this.activeTab === 'published' && task.ownerType === 'published') ||\n                          (this.activeTab === 'received' && task.ownerType === 'received');\n        console.log(`MyTask - filteredTasks: Task ID: ${task.id}, OwnerType: ${task.ownerType}, MatchesKeyword: ${matchesKeyword}, MatchesTab: ${matchesTab}, FilteredIn: ${matchesKeyword && matchesTab}`);\n        return matchesKeyword && matchesTab;\n      });\n    }\n  },\n  methods: {\n    loadStoredTasks() {\n      try {\n        console.log('MyTask - loadStoredTasks: 开始加载本地存储数据');\n        const existingTasks = uni.getStorageSync('myTasks') || '[]';\n        console.log('MyTask - loadStoredTasks: 从uni.getStorageSync(\\'myTasks\\')读取到:', existingTasks); \n        const parsedTasks = JSON.parse(existingTasks); \n        this.tasks = parsedTasks; \n        console.log('MyTask - loadStoredTasks: tasks 初始化成功，数据为:', this.tasks); \n      } catch (error) {\n        console.error('MyTask - loadStoredTasks: 加载失败:', error);\n        this.tasks = []; \n        console.log('MyTask - loadStoredTasks: 加载失败, tasks 初始化为空数组');\n      }\n    },\n    saveTasks() {\n      try {\n        uni.setStorageSync('myTasks', JSON.stringify(this.tasks));\n      } catch (error) {\n        console.error('保存任务数据失败:', error);\n      }\n    },\n    removeDuplicates(taskList) {\n      const taskMap = new Map();\n      for (const task of taskList) {\n        taskMap.set(task.id, task);\n      }\n      return Array.from(taskMap.values());\n    },\n    switchTab(tab) {\n      console.log('MyTask - switchTab: 切换标签页至:', tab);\n      this.activeTab = tab;\n      console.log('MyTask - switchTab: 当前 activeTab:', this.activeTab);\n      console.log('MyTask - switchTab: 过滤后的任务列表 filteredTasks:', this.filteredTasks);\n      this.searchKeyword = ''; // 切换标签页时清空搜索\n      this.selectedTasks = []; // 清空已选任务\n    },\n    loadTasks(type) {\n      setTimeout(() => {\n        if (type === 'received') {\n          // 模拟领取任务数据\n        } else {\n          // 默认加载发布任务数据\n        }\n        this.hasMore = true;\n      }, 1000);\n    },\n    loadMoreTasks() {\n      if (this.hasMore) {\n        this.loadTasks(this.activeTab);\n      }\n    },\n    onRefresh() {\n      this.isRefreshing = true;\n      setTimeout(() => {\n        this.isRefreshing = false;\n      }, 1500);\n    },\n    getTaskTypeColor(type) {\n      const colorMap = {\n        express: '#00BFFF',\n        takeout: '#FF9F1C',\n        buy: '#47B960',\n        sell: '#9C27B0'\n      };\n      return colorMap[type] || '#999999';\n    },\n    getTaskTypeIcon(type) {\n      const iconMap = {\n        express: 'package',\n        takeout: 'food',\n        buy: 'shopping-cart',\n        sell: 'tag'\n      };\n      return iconMap[type] || 'info';\n    },\n    getTaskTypeName(type) {\n      const nameMap = {\n        express: '快递代拿',\n        takeout: '外卖代拿',\n        buy: '求购',\n        sell: '出售'\n      };\n      return nameMap[type] || '其他';\n    },\n    getTaskStatusText(status) {\n      const statusMap = {\n        pending: '待领取',\n        processing: '进行中',\n        completed: '已完成',\n        cancelled: '已取消'\n      };\n      return statusMap[status] || '未知状态';\n    },\n    getPublishedActionText(status) {\n      const actionMap = {\n        pending: '取消任务',\n        processing: '提醒领取',\n        completed: '查看记录',\n        cancelled: '删除任务'\n      };\n      return actionMap[status] || '查看详情';\n    },\n    getReceivedActionText(status) {\n      const actionMap = {\n        pending: '开始执行',\n        processing: '上传凭证',\n        completed: '查看记录',\n        cancelled: '申请取消'\n      };\n      return actionMap[status] || '查看详情';\n    },\n    formatTime(time) {\n      if (!time) return '';\n      const date = new Date(time);\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    maskAddress(address) {\n      if (!address) return '';\n      const length = address.length;\n      if (length <= 4) return address;\n      return address.slice(0, 2) + '****' + address.slice(length - 2);\n    },\n    handlePublishedAction(task) {\n      switch (task.status) {\n        case 'pending':\n          // 取消任务逻辑\n          break;\n        case 'processing':\n          // 提醒领取逻辑\n          break;\n        case 'completed':\n          uni.navigateTo({\n            url: `/pages/task-record/task-record?id=${task.id}`\n          });\n          break;\n      }\n    },\n    handleReceivedAction(task) {\n      switch (task.status) {\n        case 'pending':\n          // 开始执行逻辑\n          break;\n        case 'processing':\n          // 上传凭证逻辑\n          break;\n        case 'completed':\n          // 查看记录逻辑\n          break;\n      }\n    },\n    handleBatchAction(action) {\n      if (this.selectedTasks.length === 0) return;\n      switch (action) {\n        case 'cancel':\n          // 批量取消逻辑\n          break;\n        case 'read':\n          // 标记已读逻辑\n          this.selectedTasks = [];\n          break;\n      }\n    },\n    showFilterOptions() {\n      uni.showModal({\n        title: '筛选条件',\n        content: '暂未实现，敬请期待',\n        confirmText: '知道了'\n      });\n    },\n    navigateToDetail(task) {\n      console.log('MyTask - navigateToDetail: 跳转到任务详情，任务ID:', task.id);\n      const taskInfoStr = encodeURIComponent(JSON.stringify(task));\n      uni.navigateTo({\n        url: `/pages/TaskDetail/TaskDetail?taskInfo=${taskInfoStr}`,\n        fail: (err) => {\n          console.error('跳转任务详情页失败:', err);\n          uni.showToast({\n            title: '跳转失败',\n            icon: 'none'\n          });\n        }\n      });\n    },\n    handleSearch() {\n      this.loadTasks(this.activeTab);\n    },\n    getConditionText(condition) {\n      const conditionMap = {\n        'new': '全新',\n        'like-new': '九成新',\n        'good': '八成新',\n        'fair': '七成新'\n      };\n      return conditionMap[condition] || condition;\n    },\n    getTimeSensitivityReminder(expectedDeliveryTime) {\n      console.log('MyTask - getTimeSensitivityReminder: 传入的 expectedDeliveryTime:', expectedDeliveryTime);\n\n      if (!expectedDeliveryTime) return '暂无时效信息';\n\n      const now = new Date();\n      let deadlineDate;\n\n      deadlineDate = new Date(expectedDeliveryTime);\n\n      if (isNaN(deadlineDate.getTime())) {\n        const [hours, minutes] = expectedDeliveryTime.split(':').map(Number);\n        if (!isNaN(hours) && !isNaN(minutes)) {\n          const today = new Date(now);\n          today.setHours(hours, minutes, 0, 0);\n          deadlineDate = today;\n        } else {\n           console.error('MyTask - getTimeSensitivityReminder: 无法解析的日期时间格式:', expectedDeliveryTime);\n           return '无效时效信息';\n        }\n      }\n\n      const diffInMilliseconds = deadlineDate.getTime() - now.getTime();\n      const diffInMinutes = Math.ceil(diffInMilliseconds / (1000 * 60));\n\n      if (diffInMinutes < 0) {\n        const overdueMinutes = Math.abs(diffInMinutes);\n        if (overdueMinutes === 0) {\n            return '已到截止时间';\n        } else if (overdueMinutes < 60) {\n            return `已超时 ${overdueMinutes} 分钟`;\n        } else if (overdueMinutes < 60 * 24) {\n            const overdueHours = Math.floor(overdueMinutes / 60);\n            const remainingMinutes = overdueMinutes % 60;\n            return `已超时 ${overdueHours} 小时 ${remainingMinutes} 分钟`;\n        } else {\n            const overdueDays = Math.floor(overdueMinutes / (60 * 24));\n            return `已超时 ${overdueDays} 天`;\n        }\n      } else if (diffInMinutes > 0) {\n        if (diffInMinutes < 60) {\n          return `剩余 ${diffInMinutes} 分钟`;\n        } else if (diffInMinutes < 60 * 24) {\n          const hours = Math.floor(diffInMinutes / 60);\n          const minutes = diffInMinutes % 60;\n          return `剩余 ${hours} 小时 ${minutes} 分钟`;\n        } else {\n          const days = Math.floor(diffInMinutes / (60 * 24));\n          return `剩余 ${days} 天`;\n        }\n      } else {\n          return '已到截止时间';\n      }\n    },\n    switchTestRole(role) {\n      uni.setStorageSync('testRole', role);\n      const user = this.TEST_USER[role] || this.TEST_USER.user;\n      uni.setStorageSync('userToken', 'test_token'); \n      uni.setStorageSync('userId', user.id);\n      uni.setStorageSync('userNickname', user.nickname);\n      uni.setStorageSync('userAvatar', user.avatar);\n\n      this.loadStoredTasks();\n\n      uni.showToast({ title: `已切换至${role}角色`, icon: 'none' });\n    }\n  },\n  onLoad(options) {\n    console.log('MyTask - onLoad: 页面加载开始, 参数:', options);\n\n    if (options.activeTab) {\n      this.activeTab = options.activeTab;\n      console.log('MyTask - onLoad: 根据参数设置 activeTab:', this.activeTab);\n    } else {\n      this.activeTab = 'published';\n      console.log('MyTask - onLoad: 参数中未指定 activeTab，默认为:', this.activeTab);\n    }\n\n    this.loadStoredTasks();\n\n    if (options.acceptedTask) {\n      try {\n        const acceptedTask = JSON.parse(decodeURIComponent(options.acceptedTask));\n        console.log('MyTask - onLoad: 解析 acceptedTask:', acceptedTask);\n\n        const existingIndex = this.tasks.findIndex(task => task.id === acceptedTask.id);\n        if (existingIndex !== -1) {\n          this.tasks[existingIndex] = acceptedTask;\n          console.log('MyTask - onLoad: 任务已存在，更新:', acceptedTask.id);\n        } else {\n          this.tasks.unshift(acceptedTask);\n          console.log('MyTask - onLoad: 添加新任务:', acceptedTask.id);\n        }\n        this.saveTasks();\n      } catch (error) {\n        console.error('MyTask - onLoad: 解析 acceptedTask 失败:', error);\n      }\n    }\n\n    console.log('MyTask - onLoad: 页面加载完成');\n  },\n  onShow() {\n    console.log('MyTask - onShow: 页面显示');\n  },\n  onReady() {\n    console.log('MyTask - onReady: 页面初次渲染完成');\n  },\n  onHide() {\n    console.log('MyTask - onHide: 页面隐藏');\n  },\n  onUnload() {\n    console.log('MyTask - onUnload: 页面卸载');\n    uni.$off('newTaskPublished');\n  },\n  onMounted() {\n    console.log('MyTask - onMounted: 页面挂载');\n    uni.$on('newTaskPublished', (taskData) => {\n      console.log('MyTask - newTaskPublished event: 接收到新任务数据:', taskData);\n      taskData.ownerType = 'published';\n      const updatedTasks = [taskData, ...this.tasks];\n      this.tasks = this.removeDuplicates(updatedTasks);\n      this.saveTasks();\n      console.log('MyTask - newTaskPublished event: 添加并保存后 tasks:', this.tasks);\n    });\n  }\n}\n</script>\n\n<style>\n.container {\n  min-height: 100vh;\n  background-color: #f5f5f5;\n  display: flex;\n  flex-direction: column;\n  padding: 10rpx;\n}\n\n/* 搜索区域样式 */\n.search-section {\n  position: relative;\n  padding: 60rpx 50rpx;\n  background-color: #ffffff;\n  height: 88rpx;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n\n.search-box {\n  position: absolute;\n  left: 30rpx;\n  top: 50%;\n  transform: translateY(-50%);\n  background-color: #f9f9f9;\n  border-radius: 12rpx;\n  padding: 16rpx 20rpx;\n  width: calc(100% - 180rpx);\n  height: 72rpx;\n}\n\n.search-box .uni-icons {\n  position: absolute;\n  left: 20rpx;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 36rpx;\n  height: 36rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.search-input {\n  position: absolute;\n  left: 76rpx; /* 图标宽度(36rpx) + 图标左边距(20rpx) + 图标右边距(20rpx) */\n  top: 50%;\n  transform: translateY(-50%);\n  width: calc(100% - 96rpx); /* 减去左侧空间(76rpx)和右侧padding(20rpx) */\n  font-size: 14px;\n  color: #333333;\n  border: none;\n  background-color: transparent;\n  height: 40rpx;\n  line-height: 40rpx;\n}\n\n.filter-btn {\n  position: absolute;\n  right: 30rpx;\n  top: 50%;\n  transform: translateY(-50%);\n  display: flex;\n  align-items: center;\n  gap: 8rpx;\n  padding: 16rpx;\n  color: #00BFFF;\n  font-size: 14px;\n  font-weight: 500;\n  white-space: nowrap;\n}\n\n/* 标签页样式 */\n.tabs-section {\n  position: relative;\n  background-color: #ffffff;\n  border-bottom: 1px solid #f0f0f0;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n  height: 88rpx;\n  width: 100%;\n}\n\n.tab-item {\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  padding: 24rpx 30rpx;\n  font-size: 16px;\n  color: #666666;\n  cursor: pointer;\n  text-align: center;\n  white-space: nowrap;\n}\n\n.tab-item:first-child {\n  left: 30rpx;\n}\n\n.tab-item:last-child {\n  right: 30rpx;\n}\n\n.tab-item.active {\n  color: #00BFFF;\n  font-weight: 500;\n}\n\n.tab-item.active::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 40rpx;\n  height: 4rpx;\n  background-color: #00BFFF;\n  border-radius: 2rpx;\n}\n\n.tab-badge {\n  position: absolute;\n  top: 16rpx;\n  right: -20rpx;\n  min-width: 32rpx;\n  height: 32rpx;\n  padding: 0 8rpx;\n  background-color: #FF4D4F;\n  border-radius: 16rpx;\n  color: #ffffff;\n  font-size: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/* 任务列表样式 */\n.task-list {\n  flex: 1;\n  padding: 20rpx 30rpx;\n}\n\n.task-card {\n  position: relative; /* 确保伪元素定位正确 */\n  overflow: hidden; /* 隐藏超出伪元素部分 */\n  background-color: #ffffff;\n  border-radius: 16rpx;\n  padding: 24rpx;\n  margin-bottom: 20rpx;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n\n.task-card::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  width: 10rpx; /* 色条宽度 */\n}\n\n.task-card.published-card::before {\n  background-color: #00BFFF; /* 蓝色色条 */\n}\n\n.task-card.received-card {\n  background-color: #e0f2f1; /* 浅绿色背景 */\n}\n\n.task-card.received-card::before {\n  background-color: #4CAF50; /* 绿色色条 */\n}\n\n.task-header {\n  position: absolute;\n  top: 20rpx;\n  right: 20rpx;\n  display: flex;\n  align-items: center;\n  gap: 8rpx;\n}\n\n.task-type-status {\n  display: flex;\n  align-items: center;\n  gap: 8rpx;\n}\n\n.task-type {\n  display: flex;\n  align-items: center;\n  gap: 4rpx;\n  padding: 6rpx 12rpx;\n  border-radius: 4rpx;\n  font-size: 12px;\n  color: #ffffff;\n}\n\n.task-status {\n  font-size: 12px;\n  padding: 4rpx 8rpx;\n  border-radius: 4rpx;\n}\n\n.task-status.pending {\n  color: #FF9F1C;\n  background-color: rgba(255, 159, 28, 0.1);\n}\n\n.task-status.processing {\n  color: #00BFFF;\n  background-color: rgba(0, 191, 255, 0.1);\n}\n\n.task-status.completed {\n  color: #47B960;\n  background-color: rgba(71, 185, 96, 0.1);\n}\n\n.task-status.cancelled {\n  color: #999999;\n  background-color: rgba(153, 153, 153, 0.1);\n}\n\n.task-title {\n  font-size: 16px;\n  font-weight: 500;\n  color: #333333;\n  margin-bottom: 16rpx;\n}\n\n.task-info {\n  margin-top:30rpx;\n  margin-bottom: 16rpx;\n  position: relative;\n  padding-left: 30rpx;\n}\n\n.info-item {\n  margin-top:20rpx;\n  position: relative;\n  margin-bottom: 12rpx;\n  height: 40rpx;\n  line-height: 40rpx;\n}\n\n.info-item .bullet {\n  position: absolute;\n  left: -4rpx;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 20rpx;\n  text-align: center;\n  line-height: 1;\n}\n\n.info-item .label {\n  position: absolute;\n  left: 25rpx;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #999999;\n  font-size: 14px;\n  width: 140rpx;\n}\n\n.info-item .value {\n  position: absolute;\n  left: 160rpx;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #333333;\n  font-size: 14px;\n  width: calc(100% - 160rpx);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.info-item .reward {\n  color: #FF9F1C;\n  font-weight: 500;\n}\n\n.task-update {\n  display: flex;\n  align-items: center;\n  gap: 8rpx;\n  margin-bottom: 16rpx;\n  font-size: 12px;\n  color: #999999;\n}\n\n.task-actions {\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 16rpx;\n}\n\n.action-btn {\n  padding: 12rpx 24rpx;\n  border-radius: 6rpx;\n  font-size: 14px;\n  color: #00BFFF;\n  background-color: rgba(0, 191, 255, 0.1);\n  border: none;\n}\n\n.task-time {\n  font-size: 12px;\n  color: #999999;\n}\n\n/* 加载更多样式 */\n.loading-more,\n.no-more {\n  text-align: center;\n  padding: 20rpx 0;\n  color: #999999;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8rpx;\n}\n\n/* 底部操作栏样式 */\n.bottom-bar {\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ffffff;\n  padding: 20rpx 30rpx;\n  padding-bottom: calc(20rpx + env(safe-area-inset-bottom));\n  box-shadow: 0 -2px 8px rgba(0, 0, 0, 0.05);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.selected-count {\n  font-size: 14px;\n  color: #666666;\n}\n\n.batch-actions {\n  display: flex;\n  gap: 20rpx;\n}\n\n.batch-btn {\n  padding: 12rpx 24rpx;\n  border-radius: 6rpx;\n  font-size: 14px;\n  color: #ffffff;\n  background-color: #00BFFF;\n  border: none;\n}\n\n/* 测试按钮样式 */\n.test-buttons {\n  position: fixed;\n  top: 100rpx;\n  right: 20rpx;\n  display: flex;\n  flex-direction: column;\n  gap: 10rpx;\n  z-index: 1000;\n}\n\n.test-button {\n  font-size: 24rpx;\n  padding: 10rpx 20rpx;\n  background-color: rgba(0, 0, 0, 0.6);\n  color: white;\n  border-radius: 8rpx;\n  border: none;\n}\n</style> \n","import MiniProgramPage from 'D:/2大花/毕业设计/Compus/pages/task/MyTask/MyTask.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni"],"mappings":"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"}