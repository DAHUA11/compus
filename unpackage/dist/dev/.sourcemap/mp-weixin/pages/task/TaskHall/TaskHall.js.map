{"version":3,"file":"TaskHall.js","sources":["pages/task/TaskHall/TaskHall.vue","../../../Software/hbuilder/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvdGFzay9UYXNrSGFsbC9UYXNrSGFsbC52dWU"],"sourcesContent":["<template>\n\t<view class=\"container\">\n\t\t <!-- 搜索区域 -->\n    <view class=\"search-section\">\n      <view class=\"search-box\">\n        <uni-icons type=\"search\" size=\"18\" color=\"#999999\" />\n        <input \n          type=\"text\" \n          v-model=\"searchKeyword\" \n          placeholder=\"搜索任务类型、状态、关键词\" \n          class=\"search-input\"\n          @input=\"handleSearchInput\"\n        />\n      </view>\n      <view class=\"filter-btn\" @tap=\"showFilterOptions\">\n        <uni-icons type=\"filter\" size=\"18\" color=\"#00BFFF\" />\n        <text>筛选</text>\n      </view>\n    </view>\n\n\t\t<!-- 分类标签 -->\n\t<scroll-view \n  class=\"category-tabs\" \n  scroll-x=\"true\"\n  :scroll-with-animation=\"true\"\n  :scroll-left=\"scrollLeft\"\n  :enhanced=\"true\"\n  :show-scrollbar=\"false\"\n  @scroll=\"handleScroll\"\n>\n  <view class=\"tabs-container\">\n    <view \n      class=\"tab-item\"\n      :class=\"{ 'tab-active': activeTab === item.value }\"\n      v-for=\"(item, index) in categories\" \n      :key=\"index\"\n      @tap=\"switchTab(index)\"\n    >\n      {{item.name}}\n    </view>\n  </view>\n</scroll-view>\n\t\t<!-- 任务列表 -->\n\t\t<scroll-view \n\t\t\tclass=\"task-list\" \n\t\t\tscroll-y \n\t\t\t@scrolltolower=\"loadMoreTasks\"\n\t\t\trefresher-enabled\n\t\t\t:refresher-triggered=\"isRefreshing\"\n\t\t\t@refresherrefresh=\"onRefresh\"\n\t\t>\n\t\t\t<view \n\t\t\t\tclass=\"task-card\" \n\t\t\t\tv-for=\"task in filteredTasks\" \n\t\t\t\t:key=\"task.id\"\n\t\t\t\t:class=\"{ 'is-top': task.isTop }\"\n\t\t\t\t@tap=\"navigateToDetail(task.id)\"\n\t\t\t>\n\t\t\t\t<!-- 任务标签 -->\n\t\t\t\t<view class=\"task-tags\" v-if=\"task.tags && task.tags.length > 0\">\n\t\t\t\t\t<view \n\t\t\t\t\t\tclass=\"tag\" \n\t\t\t\t\t\tv-for=\"(tag, index) in task.tags\" \n\t\t\t\t\t\t:key=\"index\"\n\t\t\t\t\t\t:class=\"getTagClass(tag)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<uni-icons \n\t\t\t\t\t\t\tv-if=\"getTagIcon(tag)\" \n\t\t\t\t\t\t\t:type=\"getTagIcon(tag)\" \n\t\t\t\t\t\t\tsize=\"14\" \n\t\t\t\t\t\t\t:color=\"getTagColor(tag)\" \n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<text>{{ tag }}</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\n\t\t\t\t<!-- 任务类型和状态 -->\n\t\t\t\t<view class=\"task-header\">\n\t\t\t\t\t<!-- 左侧用户信息 -->\n\t\t\t\t\t<view class=\"user-info\">\n\t\t\t\t\t\t<view class=\"avatar-wrapper\">\n\t\t\t\t\t\t\t<image class=\"avatar\" :src=\"task.publisher.avatar\" mode=\"aspectFill\" />\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"sub-title\">\n\t\t\t\t\t\t<text class=\"nickname\">{{ task.publisher.nickname }}</text>\n\t\t\t\t\t\t<text>发布时间:</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t\n\t\t\t\t\t<!-- 右侧任务类型和状态 -->\n\t\t\t\t\t<view class=\"task-type-status\">\n\t\t\t\t\t\t<view class=\"task-type\" :style=\"{ backgroundColor: getTaskTypeColor(task.type) }\">\n\t\t\t\t\t\t\t<uni-icons :type=\"getTaskTypeIcon(task.type)\" size=\"16\" color=\"#FFFFFF\" />\n\t\t\t\t\t\t\t<text>{{ getTaskTypeName(task.type) }}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"task-status\" :class=\"task.status\">\n\t\t\t\t\t\t\t{{ getTaskStatusText(task.status) }}\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\n\t\t\t\t<!-- 任务标题 -->\n\t\t\t\t<view class=\"task-title\">{{ task.title }}</view>\n\n\t\t\t\t<!-- 任务关键信息 -->\n\t\t\t\t<view class=\"task-info\">\n\t\t\t\t\t<view class=\"info-item\" v-if=\"task.type === 'express' || task.type === 'takeout'\">\n\t\t\t\t\t\t<uni-icons type=\"location\" size=\"12\" color=\"#00BFFF\" class=\"bullet\" />\n\t\t\t\t\t\t<text class=\"label\">取件地址：</text>\n\t\t\t\t\t\t<text class=\"value\">{{ maskAddress(task.pickupAddress) }}</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"info-item\" v-if=\"task.type === 'express' || task.type === 'takeout'\">\n\t\t\t\t\t\t<uni-icons type=\"location-filled\" size=\"12\" color=\"#00BFFF\" class=\"bullet\" />\n\t\t\t\t\t\t<text class=\"label\">送达地址：</text>\n\t\t\t\t\t\t<text class=\"value\">{{ maskAddress(task.deliveryAddress) }}</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"info-item\" v-if=\"task.type === 'buy' || task.type === 'sell'\">\n\t\t\t\t\t\t<uni-icons type=\"paperplane\" size=\"12\" color=\"#00BFFF\" class=\"bullet\" />\n\t\t\t\t\t\t<text class=\"label\">物品名称：</text>\n\t\t\t\t\t\t<text class=\"value\">{{ task.itemName }}</text>\n\t\t\t\t\t</view>\n\t\t\t\t\t<view class=\"info-item\">\n\t\t\t\t\t\t<uni-icons type=\"wallet\" size=\"12\" color=\"#00BFFF\" class=\"bullet\" />\n\t\t\t\t\t\t<text class=\"label\">悬赏金额：</text>\n\t\t\t\t\t\t<text class=\"value reward\">¥{{ task.reward }}</text>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\n\t\t\t\t<!-- 任务操作区 -->\n\t\t\t\t<view class=\"task-actions\">\n\t\t\t\t\t<view class=\"action-left\">\n\t\t\t\t\t\t<view class=\"distance\" v-if=\"task.distance\">\n\t\t\t\t\t\t\t<uni-icons type=\"location\" size=\"14\" color=\"#999999\" />\n\t\t\t\t\t\t\t<text>{{ task.distance }}km</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"views\" v-if=\"task.views\">\n\t\t\t\t\t\t\t<uni-icons type=\"eye\" size=\"14\" color=\"#999999\" />\n\t\t\t\t\t\t\t<text>{{ task.views }}次浏览</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t\t<button \n\t\t\t\t\t\tv-if=\"task.status === 'pending'\"\n\t\t\t\t\t\tclass=\"action-btn\" \n\t\t\t\t\t\t@tap.stop=\"handleTakeTask(task)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t立即接单\n\t\t\t\t\t</button>\n\t\t\t\t</view>\n\t\t\t</view>\n\n\t\t\t<!-- 加载更多提示 -->\n\t\t\t<view class=\"loading-more\" v-if=\"hasMore\">\n\t\t\t\t<uni-icons type=\"spinner-cycle\" size=\"20\" color=\"#00BFFF\" />\n\t\t\t\t<text>加载更多...</text>\n\t\t\t</view>\n\t\t\t<view class=\"no-more\" v-else>\n\t\t\t\t<text>没有更多任务了</text>\n\t\t\t</view>\n\t</scroll-view>\n\t</view>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      categories: [\n        { name: '全部', value: 'all' },\n        { name: '快递代取', value: 'express' },\n        { name: '外卖代拿', value: 'takeout' },\n        { name: '求购', value: 'buy' },\n        { name: '出物', value: 'sell' },\n        { name: '其他', value: 'other' }\n      ],\n      scrollLeft: 0,\n      tabWidths: [],\n      tabPositions: [],\n      searchKeyword: '',\n      activeTab: 'all',\n      isRefreshing: false,\n      hasMore: true,\n      searchTimer: null,\n      currentTabId: 'tab-0',\n      tasks: []\n    }\n  },\n  computed: {\n    filteredTasks() {\n      return this.tasks.filter(task => {\n        const keyword = this.searchKeyword.trim().toLowerCase();\n        const typeMatch = this.activeTab === 'all' || task.type === this.activeTab;\n        const keywordMatch = \n          task.title.toLowerCase().includes(keyword) ||\n          task.pickupAddress?.toLowerCase().includes(keyword) ||\n          task.deliveryAddress?.toLowerCase().includes(keyword) ||\n          task.itemName?.toLowerCase().includes(keyword);\n        return typeMatch && keywordMatch;\n      });\n    }\n  },\n  methods: {\n    loadStoredTasks() {\n      console.log('TaskHall - loadStoredTasks: 开始加载本地存储数据');\n      try {\n        const storedTasks = uni.getStorageSync('myTasks');\n        console.log('TaskHall - loadStoredTasks: 读取到的存储数据:', storedTasks);\n        if (storedTasks) {\n          const parsedTasks = JSON.parse(storedTasks);\n          this.tasks = parsedTasks;\n          console.log('TaskHall - loadStoredTasks: 加载后的 tasks:', this.tasks);\n        } else {\n          this.tasks = [];\n          console.log('TaskHall - loadStoredTasks: 本地存储无数据，tasks 初始化为空数组');\n        }\n      } catch (error) {\n        console.error('TaskHall - 加载存储的任务数据失败:', error);\n        this.tasks = [];\n        console.log('TaskHall - loadStoredTasks: 加载失败，tasks 初始化为空数组');\n      }\n    },\n    saveTasks() {\n      try {\n        uni.setStorageSync('myTasks', JSON.stringify(this.tasks));\n        console.log('TaskHall - saveTasks: 任务数据已保存到本地存储');\n      } catch (error) {\n        console.error('TaskHall - 保存任务数据失败:', error);\n      }\n    },\n    handleSearchInput() {\n      if (this.searchTimer) {\n        clearTimeout(this.searchTimer);\n      }\n      this.searchTimer = setTimeout(() => {\n        this.handleSearch();\n      }, 300);\n    },\n    handleSearchConfirm() {\n      if (this.searchTimer) {\n        clearTimeout(this.searchTimer);\n      }\n      this.handleSearch();\n    },\n    clearSearch() {\n      this.searchKeyword = '';\n      this.handleSearch();\n    },\n    handleSearch() {\n      console.log('搜索关键词：', this.searchKeyword);\n      this.loadTasks();\n    },\n    handleScroll(e) {\n      console.log('滚动位置:', e.detail.scrollLeft);\n    },\n    calculateTabPositions() {\n      const query = uni.createSelectorQuery().in(this);\n      this.categories.forEach((_, index) => {\n        query.select(`.tab-item:nth-child(${index + 1})`).boundingClientRect();\n      });\n      \n      query.exec((res) => {\n        let position = 0;\n        this.tabPositions = res.map(rect => {\n          const currentPosition = position;\n          position += rect.width + 24;\n          return currentPosition;\n        });\n      });\n    },\n    switchTab(index) {\n      this.activeTab = this.categories[index].value;\n      this.searchKeyword = '';\n      this.loadTasks();\n      \n      const query = uni.createSelectorQuery();\n      query.selectAll('.tab-item').boundingClientRect();\n      query.select('.category-tabs').boundingClientRect();\n      query.exec((res) => {\n        if (res[0] && res[1]) {\n          const tabs = res[0];\n          const scrollView = res[1];\n          let position = 0;\n          \n          for (let i = 0; i < index; i++) {\n            position += tabs[i].width + 24;\n          }\n          \n          const tabWidth = tabs[index].width;\n          const scrollViewWidth = scrollView.width;\n          this.scrollLeft = Math.max(0, position - (scrollViewWidth / 2) + (tabWidth / 2));\n        }\n      });\n    },\n    loadTasks() {\n      setTimeout(() => {\n        this.hasMore = false;\n      }, 1000);\n    },\n    loadMoreTasks() {\n      if (this.hasMore) {\n        this.loadTasks();\n      }\n    },\n    onRefresh() {\n      this.isRefreshing = true;\n      setTimeout(() => {\n        this.isRefreshing = false;\n      }, 1500);\n    },\n    getTaskTypeColor(type) {\n      const colorMap = {\n        express: '#00BFFF',\n        takeout: '#FF9F1C',\n        buy: '#47B960',\n        sell: '#9C27B0'\n      };\n      return colorMap[type] || '#999999';\n    },\n    getTaskTypeIcon(type) {\n      const iconMap = {\n        express: 'package',\n        takeout: 'food',\n        buy: 'shopping-cart',\n        sell: 'tag'\n      };\n      return iconMap[type] || 'info';\n    },\n    getTaskTypeName(type) {\n      const nameMap = {\n        express: '快递代取',\n        takeout: '外卖代拿',\n        buy: '求购',\n        sell: '出物'\n      };\n      return nameMap[type] || '其他';\n    },\n    getTaskStatusText(status) {\n      const statusMap = {\n        pending: '待领取',\n        processing: '进行中',\n        completed: '已完成',\n        cancelled: '已取消'\n      };\n      return statusMap[status] || '未知状态';\n    },\n    formatTime(time) {\n      if (!time) return '';\n      const date = new Date(time);\n      return date.toLocaleString('zh-CN', {\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    formatExpireTime(time) {\n      if (!time) return '';\n      const now = new Date();\n      const expire = new Date(time);\n      const diff = expire.getTime() - now.getTime();\n      const hours = Math.floor(diff / (1000 * 60 * 60));\n      const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n      \n      if (hours > 0) {\n        return `${hours}小时后过期`;\n      } else if (minutes > 0) {\n        return `${minutes}分钟后过期`;\n      } else {\n        return '即将过期';\n      }\n    },\n    maskAddress(address) {\n      if (!address) return '';\n      const length = address.length;\n      if (length <= 4) return address;\n      return address.slice(0, 2) + '****' + address.slice(length - 2);\n    },\n    showFilterOptions() {\n      uni.showActionSheet({\n        itemList: ['按距离排序', '按悬赏排序', '按时间排序', '只看急单'],\n        success: (res) => {\n          console.log('选择筛选选项：', res.tapIndex);\n        }\n      });\n    },\n    handleTakeTask(task) {\n      const taskInfo = {\n        id: task.id,\n        type: task.type,\n        title: task.title,\n        description: task.description,\n        reward: task.reward,\n        publishTime: task.publishTime,\n        expectedDeliveryTime: task.expectedDeliveryTime,\n        pickupAddress: task.pickupAddress,\n        deliveryAddress: task.deliveryAddress,\n        images: task.images || [],\n        publisher: {\n          id: task.publisherId,\n          nickname: task.publisherName,\n          avatar: task.publisherAvatar,\n          creditRating: task.publisherRating\n        }\n      };\n\n      uni.navigateTo({\n        url: `/pages/TaskDetail/TaskDetail?taskInfo=${encodeURIComponent(JSON.stringify(taskInfo))}`\n      });\n    },\n    navigateToDetail(taskId) {\n      uni.navigateTo({\n        url: `/pages/task-detail/task-detail?id=${taskId}`\n      });\n    },\n    getTagClass(tag) {\n      const classMap = {\n        '置顶': 'tag-top',\n        '加急': 'tag-urgent'\n      };\n      return classMap[tag] || '';\n    },\n    getTagIcon(tag) {\n      const iconMap = {\n        '置顶': 'top',\n        '加急': 'notification-filled'\n      };\n      return iconMap[tag] || '';\n    },\n    getTagColor(tag) {\n      const colorMap = {\n        '置顶': '#FF9F1C',\n        '加急': '#FF4D4F'\n      };\n      return colorMap[tag] || '#666666';\n    }\n  },\n  onLoad(options) {\n    console.log('TaskHall - onLoad: 页面加载开始, 参数:', options);\n    \n    if (options.taskInfo) {\n      try {\n        const taskData = JSON.parse(decodeURIComponent(options.taskInfo));\n        console.log('TaskHall接收到URL传递的任务数据:', taskData);\n        \n        if (this.activeTab !== 'all') {\n          this.activeTab = 'all';\n        }\n      } catch (error) {\n        console.error('TaskHall - 解析任务数据失败:', error);\n        uni.showToast({\n          title: '加载任务数据失败',\n          icon: 'none'\n        });\n      }\n    }\n    \n    console.log('TaskHall - onLoad: 页面加载完成');\n  },\n  onMounted() {\n    console.log('TaskHall - onMounted: 页面挂载');\n    this.loadStoredTasks();\n    \n    uni.$on('newTaskPublished', (taskData) => {\n      console.log('TaskHall接收到新任务数据:', taskData);\n      this.tasks.unshift(taskData);\n      this.saveTasks();\n      \n      if (this.activeTab !== 'all') {\n        this.activeTab = 'all';\n      }\n    });\n  },\n  onUnmounted() {\n    console.log('TaskHall - onUnmounted: 页面卸载');\n    uni.$off('newTaskPublished');\n  }\n}\n</script>\n\n<style>\n.container {\n\tmin-height: 100vh;\n\tbackground-color: #f5f5f5;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n/* 搜索区域样式 */\n.search-section {\n  position: relative;\n  padding: 60rpx 50rpx;\n  background-color: #ffffff;\n  height: 88rpx;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n}\n\n.search-box {\n  position: absolute;\n  left: 30rpx;\n  top: 50%;\n  transform: translateY(-50%);\n  background-color: #f9f9f9;\n  border-radius: 12rpx;\n  padding: 16rpx 20rpx;\n  width: calc(100% - 180rpx);\n  height: 72rpx;\n}\n\n.search-box .uni-icons {\n  position: absolute;\n  left: 20rpx;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 36rpx;\n  height: 36rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.search-input {\n  position: absolute;\n  left: 76rpx;\n  top: 50%;\n  transform: translateY(-50%);\n  width: calc(100% - 96rpx);\n  font-size: 14px;\n  color: #333333;\n  border: none;\n  background-color: transparent;\n  height: 40rpx;\n  line-height: 40rpx;\n}\n\n.filter-btn {\n  position: absolute;\n  right: 30rpx;\n  top: 50%;\n  transform: translateY(-50%);\n  display: flex;\n  align-items: center;\n  gap: 8rpx;\n  padding: 16rpx;\n  color: #00BFFF;\n  font-size: 14px;\n  font-weight: 500;\n  white-space: nowrap;\n}\n/* 分类标签 */\n.category-tabs {\n  width: 100%;\n  height: 80rpx;\n  background-color: #FFFFFF;\n  white-space: nowrap;\n  -webkit-overflow-scrolling: touch;\n  overflow: hidden;\n}\n\n.tabs-container {\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  padding: 0 30rpx;\n  min-width: 100%;\n}\n\n.tab-item {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 32rpx;\n  margin-right: 24rpx;\n  font-size: 28rpx;\n  font-weight: 400;\n  color: #666666;\n  background-color: #F5F5F5;\n  border-radius: 40rpx;\n  height: 60rpx;\n  flex-shrink: 0;\n  transition: all 0.3s ease;\n  min-width: 120rpx;\n}\n\n.tab-active {\n  background-color: #00BFFF;\n  color: #FFFFFF;\n  font-weight: 500;\n  box-shadow: 0 4rpx 12rpx rgba(0, 191, 255, 0.2);\n}\n\n/* 添加渐变遮罩效果 */\n.category-tabs::before,\n.category-tabs::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: 60rpx;\n  pointer-events: none;\n  z-index: 1;\n}\n\n.category-tabs::before {\n  left: 0;\n  background: linear-gradient(to right, #FFFFFF, transparent);\n}\n\n.category-tabs::after {\n  right: 0;\n  background: linear-gradient(to left, #FFFFFF, transparent);\n}\n\n/* 任务列表样式 */\n.task-list {\n\tflex: 1;\n\tpadding: 20rpx 30rpx;\n}\n\n.task-card {\n\tbackground-color: #ffffff;\n\tborder-radius: 16rpx;\n\tpadding: 24rpx;\n\tmargin-bottom: 20rpx;\n\tbox-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n\tposition: relative;\n\ttransition: all 0.3s ease;\n}\n\n.task-card.is-top {\n\tborder: 2px solid #FF9F1C;\n}\n\n.task-card:active {\n\ttransform: scale(0.98);\n}\n\n.task-header {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tmargin-bottom: 16rpx;\n\theight: 150rpx;\n\tmargin-top: 80rpx;\n}\n\n/* 用户信息样式 */\n.user-info {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  position: absolute;\n  left: 24rpx;\n  top: 50%;\n  transform: translateY(-50%);\n  height: 100%;\n}\n.sub-title{\n\tdisplay:flex;\n}\n.avatar-wrapper {\n  width: 150rpx;\n  height: 150rpx;\n  margin-right: 16rpx;\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.avatar {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  border: 2rpx solid #f0f0f0;\n}\n\n.nickname {\n  font-size: 14px;\n  color: #333333;\n  font-weight: 500;\n  white-space: nowrap;\n  line-height: 64rpx;\n  display: inline-block;\n}\n\n/* 任务类型和状态样式 */\n.task-type-status {\n\tposition: absolute;\n\tright: 24rpx;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: flex-end;\n\tgap: 8rpx;\n}\n\n.task-type {\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 4rpx;\n\tpadding: 6rpx 12rpx;\n\tborder-radius: 4rpx;\n\tfont-size: 12px;\n\tcolor: #ffffff;\n}\n\n.task-status {\n\tfont-size: 12px;\n\tpadding: 4rpx 8rpx;\n\tborder-radius: 4rpx;\n}\n\n.task-status.pending {\n\tcolor: #FF9F1C;\n\tbackground-color: rgba(255, 159, 28, 0.1);\n}\n\n.task-status.processing {\n\tcolor: #00BFFF;\n\tbackground-color: rgba(0, 191, 255, 0.1);\n}\n\n.task-status.completed {\n\tcolor: #47B960;\n\tbackground-color: rgba(71, 185, 96, 0.1);\n}\n\n.task-status.cancelled {\n\tcolor: #999999;\n\tbackground-color: rgba(153, 153, 153, 0.1);\n}\n\n.task-time {\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 4rpx;\n\tfont-size: 12px;\n\tcolor: #999999;\n}\n\n.task-title {\n\tpadding-left: 30rpx;\n\tfont-size: 16px;\n\tfont-weight: 500;\n\tcolor: #333333;\n\tmargin-bottom: 16rpx;\n}\n\n.task-info {\n  margin-bottom: 16rpx;\n  position: relative;\n  padding-left: 30rpx;\n  border-left: 4rpx solid #00BFFF;\n  margin-left: 20rpx;\n}\n\n.info-item {\n  position: relative;\n  margin-bottom: 12rpx;\n  height: 40rpx;\n  line-height: 40rpx;\n}\n\n.info-item .bullet {\n  position: absolute;\n  left: -4rpx;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 20rpx;\n  text-align: center;\n  line-height: 1;\n}\n\n.info-item .label {\n  position: absolute;\n  left: 25rpx;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #999999;\n  font-size: 14px;\n  width: 140rpx;\n}\n\n.info-item .value {\n  position: absolute;\n  left: 160rpx;\n  top: 50%;\n  transform: translateY(-50%);\n  color: #333333;\n  font-size: 14px;\n  width: calc(100% - 160rpx);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.info-item .value.reward {\n  color: #FF9F1C;\n  font-weight: 500;\n}\n\n/* 任务操作区样式 */\n.task-actions {\n  position: relative;\n  margin-top: 20rpx;\n  padding-top: 20rpx;\n  border-top: 1px solid #f0f0f0;\n  min-height: 100rpx;\n}\n\n.action-left {\n  position: absolute;\n  left: 24rpx;\n  top: 50%;\n  transform: translateY(-50%);\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 24rpx;\n}\n\n.distance, .views {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 4rpx;\n  font-size: 12px;\n  color: #999999;\n  white-space: nowrap;\n}\n\n.distance {\n  position: relative;\n  left: 0;\n}\n\n.views {\n  position: relative;\n  left: 0;\n}\n\n.action-btn {\n  position: absolute;\n  right: 24rpx;\n  bottom: 0;\n  padding: 12rpx 32rpx;\n  border-radius: 32rpx;\n  font-size: 14px;\n  color: #ffffff;\n  background-color: #00BFFF;\n  border: none;\n  box-shadow: 0 4px 12px rgba(0, 191, 255, 0.2);\n  transition: all 0.3s ease;\n}\n\n/* 加载更多样式 */\n.loading-more,\n.no-more {\n\ttext-align: center;\n\tpadding: 20rpx 0;\n\tcolor: #999999;\n\tfont-size: 14px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tgap: 8rpx;\n}\n\n/* 任务标签样式 */\n.task-tags {\n\tmargin-bottom:20rpx;\n  position: absolute;\n  top: 24rpx;\n  left: 24rpx;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  gap: 12rpx;\n  z-index: 1;\n  max-width: calc(100% - 48rpx);\n}\n\n.tag {\n  display: flex;\n  align-items: center;\n  gap: 6rpx;\n  padding: 6rpx 16rpx;\n  border-radius: 24rpx;\n  font-size: 12px;\n  white-space: nowrap;\n  flex-shrink: 0;\n  backdrop-filter: blur(4px);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n}\n\n.tag-top {\n  background: linear-gradient(135deg, rgba(255, 159, 28, 0.1), rgba(255, 159, 28, 0.2));\n  color: #FF9F1C;\n  border: 1px solid rgba(255, 159, 28, 0.3);\n}\n\n.tag-urgent {\n  background: linear-gradient(135deg, rgba(255, 77, 79, 0.1), rgba(255, 77, 79, 0.2));\n  color: #FF4D4F;\n  border: 1px solid rgba(255, 77, 79, 0.3);\n}\n\n.tag:active {\n  transform: scale(0.95);\n  opacity: 0.9;\n}\n</style>","import MiniProgramPage from 'D:/2大花/毕业设计/Compus/pages/task/TaskHall/TaskHall.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni"],"mappings":";;AAmKA,MAAK,YAAU;AAAA,EACb,OAAO;AACL,WAAO;AAAA,MACL,YAAY;AAAA,QACV,EAAE,MAAM,MAAM,OAAO,MAAO;AAAA,QAC5B,EAAE,MAAM,QAAQ,OAAO,UAAW;AAAA,QAClC,EAAE,MAAM,QAAQ,OAAO,UAAW;AAAA,QAClC,EAAE,MAAM,MAAM,OAAO,MAAO;AAAA,QAC5B,EAAE,MAAM,MAAM,OAAO,OAAQ;AAAA,QAC7B,EAAE,MAAM,MAAM,OAAO,QAAQ;AAAA,MAC9B;AAAA,MACD,YAAY;AAAA,MACZ,WAAW,CAAE;AAAA,MACb,cAAc,CAAE;AAAA,MAChB,eAAe;AAAA,MACf,WAAW;AAAA,MACX,cAAc;AAAA,MACd,SAAS;AAAA,MACT,aAAa;AAAA,MACb,cAAc;AAAA,MACd,OAAO,CAAC;AAAA,IACV;AAAA,EACD;AAAA,EACD,UAAU;AAAA,IACR,gBAAgB;AACd,aAAO,KAAK,MAAM,OAAO,UAAQ;;AAC/B,cAAM,UAAU,KAAK,cAAc,KAAM,EAAC,YAAW;AACrD,cAAM,YAAY,KAAK,cAAc,SAAS,KAAK,SAAS,KAAK;AACjE,cAAM,eACJ,KAAK,MAAM,cAAc,SAAS,OAAO,OACzC,UAAK,kBAAL,mBAAoB,cAAc,SAAS,eAC3C,UAAK,oBAAL,mBAAsB,cAAc,SAAS,eAC7C,UAAK,aAAL,mBAAe,cAAc,SAAS;AACxC,eAAO,aAAa;AAAA,MACtB,CAAC;AAAA,IACH;AAAA,EACD;AAAA,EACD,SAAS;AAAA,IACP,kBAAkB;AAChBA,oBAAAA,MAAY,MAAA,OAAA,2CAAA,wCAAwC;AACpD,UAAI;AACF,cAAM,cAAcA,cAAAA,MAAI,eAAe,SAAS;AAChDA,sBAAA,MAAA,MAAA,OAAA,2CAAY,yCAAyC,WAAW;AAChE,YAAI,aAAa;AACf,gBAAM,cAAc,KAAK,MAAM,WAAW;AAC1C,eAAK,QAAQ;AACbA,wBAAA,MAAA,MAAA,OAAA,2CAAY,2CAA2C,KAAK,KAAK;AAAA,eAC5D;AACL,eAAK,QAAQ;AACbA,wBAAAA,MAAA,MAAA,OAAA,2CAAY,mDAAmD;AAAA,QACjE;AAAA,MACA,SAAO,OAAO;AACdA,sBAAc,MAAA,MAAA,SAAA,2CAAA,2BAA2B,KAAK;AAC9C,aAAK,QAAQ;AACbA,sBAAAA,MAAY,MAAA,OAAA,2CAAA,gDAAgD;AAAA,MAC9D;AAAA,IACD;AAAA,IACD,YAAY;AACV,UAAI;AACFA,sBAAG,MAAC,eAAe,WAAW,KAAK,UAAU,KAAK,KAAK,CAAC;AACxDA,sBAAAA,8DAAY,oCAAoC;AAAA,MAChD,SAAO,OAAO;AACdA,sBAAA,MAAA,MAAA,SAAA,2CAAc,wBAAwB,KAAK;AAAA,MAC7C;AAAA,IACD;AAAA,IACD,oBAAoB;AAClB,UAAI,KAAK,aAAa;AACpB,qBAAa,KAAK,WAAW;AAAA,MAC/B;AACA,WAAK,cAAc,WAAW,MAAM;AAClC,aAAK,aAAY;AAAA,MAClB,GAAE,GAAG;AAAA,IACP;AAAA,IACD,sBAAsB;AACpB,UAAI,KAAK,aAAa;AACpB,qBAAa,KAAK,WAAW;AAAA,MAC/B;AACA,WAAK,aAAY;AAAA,IAClB;AAAA,IACD,cAAc;AACZ,WAAK,gBAAgB;AACrB,WAAK,aAAY;AAAA,IAClB;AAAA,IACD,eAAe;AACbA,oBAAY,MAAA,MAAA,OAAA,2CAAA,UAAU,KAAK,aAAa;AACxC,WAAK,UAAS;AAAA,IACf;AAAA,IACD,aAAa,GAAG;AACdA,0BAAY,MAAA,OAAA,2CAAA,SAAS,EAAE,OAAO,UAAU;AAAA,IACzC;AAAA,IACD,wBAAwB;AACtB,YAAM,QAAQA,cAAAA,MAAI,oBAAqB,EAAC,GAAG,IAAI;AAC/C,WAAK,WAAW,QAAQ,CAAC,GAAG,UAAU;AACpC,cAAM,OAAO,uBAAuB,QAAQ,CAAC,GAAG,EAAE;MACpD,CAAC;AAED,YAAM,KAAK,CAAC,QAAQ;AAClB,YAAI,WAAW;AACf,aAAK,eAAe,IAAI,IAAI,UAAQ;AAClC,gBAAM,kBAAkB;AACxB,sBAAY,KAAK,QAAQ;AACzB,iBAAO;AAAA,QACT,CAAC;AAAA,MACH,CAAC;AAAA,IACF;AAAA,IACD,UAAU,OAAO;AACf,WAAK,YAAY,KAAK,WAAW,KAAK,EAAE;AACxC,WAAK,gBAAgB;AACrB,WAAK,UAAS;AAEd,YAAM,QAAQA,oBAAI;AAClB,YAAM,UAAU,WAAW,EAAE,mBAAkB;AAC/C,YAAM,OAAO,gBAAgB,EAAE,mBAAkB;AACjD,YAAM,KAAK,CAAC,QAAQ;AAClB,YAAI,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG;AACpB,gBAAM,OAAO,IAAI,CAAC;AAClB,gBAAM,aAAa,IAAI,CAAC;AACxB,cAAI,WAAW;AAEf,mBAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC9B,wBAAY,KAAK,CAAC,EAAE,QAAQ;AAAA,UAC9B;AAEA,gBAAM,WAAW,KAAK,KAAK,EAAE;AAC7B,gBAAM,kBAAkB,WAAW;AACnC,eAAK,aAAa,KAAK,IAAI,GAAG,WAAY,kBAAkB,IAAM,WAAW,CAAE;AAAA,QACjF;AAAA,MACF,CAAC;AAAA,IACF;AAAA,IACD,YAAY;AACV,iBAAW,MAAM;AACf,aAAK,UAAU;AAAA,MAChB,GAAE,GAAI;AAAA,IACR;AAAA,IACD,gBAAgB;AACd,UAAI,KAAK,SAAS;AAChB,aAAK,UAAS;AAAA,MAChB;AAAA,IACD;AAAA,IACD,YAAY;AACV,WAAK,eAAe;AACpB,iBAAW,MAAM;AACf,aAAK,eAAe;AAAA,MACrB,GAAE,IAAI;AAAA,IACR;AAAA,IACD,iBAAiB,MAAM;AACrB,YAAM,WAAW;AAAA,QACf,SAAS;AAAA,QACT,SAAS;AAAA,QACT,KAAK;AAAA,QACL,MAAM;AAAA;AAER,aAAO,SAAS,IAAI,KAAK;AAAA,IAC1B;AAAA,IACD,gBAAgB,MAAM;AACpB,YAAM,UAAU;AAAA,QACd,SAAS;AAAA,QACT,SAAS;AAAA,QACT,KAAK;AAAA,QACL,MAAM;AAAA;AAER,aAAO,QAAQ,IAAI,KAAK;AAAA,IACzB;AAAA,IACD,gBAAgB,MAAM;AACpB,YAAM,UAAU;AAAA,QACd,SAAS;AAAA,QACT,SAAS;AAAA,QACT,KAAK;AAAA,QACL,MAAM;AAAA;AAER,aAAO,QAAQ,IAAI,KAAK;AAAA,IACzB;AAAA,IACD,kBAAkB,QAAQ;AACxB,YAAM,YAAY;AAAA,QAChB,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,WAAW;AAAA,QACX,WAAW;AAAA;AAEb,aAAO,UAAU,MAAM,KAAK;AAAA,IAC7B;AAAA,IACD,WAAW,MAAM;AACf,UAAI,CAAC;AAAM,eAAO;AAClB,YAAM,OAAO,IAAI,KAAK,IAAI;AAC1B,aAAO,KAAK,eAAe,SAAS;AAAA,QAClC,OAAO;AAAA,QACP,KAAK;AAAA,QACL,MAAM;AAAA,QACN,QAAQ;AAAA,MACV,CAAC;AAAA,IACF;AAAA,IACD,iBAAiB,MAAM;AACrB,UAAI,CAAC;AAAM,eAAO;AAClB,YAAM,MAAM,oBAAI;AAChB,YAAM,SAAS,IAAI,KAAK,IAAI;AAC5B,YAAM,OAAO,OAAO,QAAU,IAAE,IAAI,QAAO;AAC3C,YAAM,QAAQ,KAAK,MAAM,QAAQ,MAAO,KAAK,GAAG;AAChD,YAAM,UAAU,KAAK,MAAO,QAAQ,MAAO,KAAK,OAAQ,MAAO,GAAG;AAElE,UAAI,QAAQ,GAAG;AACb,eAAO,GAAG,KAAK;AAAA,MACjB,WAAW,UAAU,GAAG;AACtB,eAAO,GAAG,OAAO;AAAA,aACZ;AACL,eAAO;AAAA,MACT;AAAA,IACD;AAAA,IACD,YAAY,SAAS;AACnB,UAAI,CAAC;AAAS,eAAO;AACrB,YAAM,SAAS,QAAQ;AACvB,UAAI,UAAU;AAAG,eAAO;AACxB,aAAO,QAAQ,MAAM,GAAG,CAAC,IAAI,SAAS,QAAQ,MAAM,SAAS,CAAC;AAAA,IAC/D;AAAA,IACD,oBAAoB;AAClBA,oBAAAA,MAAI,gBAAgB;AAAA,QAClB,UAAU,CAAC,SAAS,SAAS,SAAS,MAAM;AAAA,QAC5C,SAAS,CAAC,QAAQ;AAChBA,sFAAY,WAAW,IAAI,QAAQ;AAAA,QACrC;AAAA,MACF,CAAC;AAAA,IACF;AAAA,IACD,eAAe,MAAM;AACnB,YAAM,WAAW;AAAA,QACf,IAAI,KAAK;AAAA,QACT,MAAM,KAAK;AAAA,QACX,OAAO,KAAK;AAAA,QACZ,aAAa,KAAK;AAAA,QAClB,QAAQ,KAAK;AAAA,QACb,aAAa,KAAK;AAAA,QAClB,sBAAsB,KAAK;AAAA,QAC3B,eAAe,KAAK;AAAA,QACpB,iBAAiB,KAAK;AAAA,QACtB,QAAQ,KAAK,UAAU,CAAE;AAAA,QACzB,WAAW;AAAA,UACT,IAAI,KAAK;AAAA,UACT,UAAU,KAAK;AAAA,UACf,QAAQ,KAAK;AAAA,UACb,cAAc,KAAK;AAAA,QACrB;AAAA;AAGFA,oBAAAA,MAAI,WAAW;AAAA,QACb,KAAK,yCAAyC,mBAAmB,KAAK,UAAU,QAAQ,CAAC,CAAC;AAAA,MAC5F,CAAC;AAAA,IACF;AAAA,IACD,iBAAiB,QAAQ;AACvBA,oBAAAA,MAAI,WAAW;AAAA,QACb,KAAK,qCAAqC,MAAM;AAAA,MAClD,CAAC;AAAA,IACF;AAAA,IACD,YAAY,KAAK;AACf,YAAM,WAAW;AAAA,QACf,MAAM;AAAA,QACN,MAAM;AAAA;AAER,aAAO,SAAS,GAAG,KAAK;AAAA,IACzB;AAAA,IACD,WAAW,KAAK;AACd,YAAM,UAAU;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA;AAER,aAAO,QAAQ,GAAG,KAAK;AAAA,IACxB;AAAA,IACD,YAAY,KAAK;AACf,YAAM,WAAW;AAAA,QACf,MAAM;AAAA,QACN,MAAM;AAAA;AAER,aAAO,SAAS,GAAG,KAAK;AAAA,IAC1B;AAAA,EACD;AAAA,EACD,OAAO,SAAS;AACdA,kBAAA,MAAA,MAAA,OAAA,2CAAY,kCAAkC,OAAO;AAErD,QAAI,QAAQ,UAAU;AACpB,UAAI;AACF,cAAM,WAAW,KAAK,MAAM,mBAAmB,QAAQ,QAAQ,CAAC;AAChEA,sBAAY,MAAA,MAAA,OAAA,2CAAA,0BAA0B,QAAQ;AAE9C,YAAI,KAAK,cAAc,OAAO;AAC5B,eAAK,YAAY;AAAA,QACnB;AAAA,MACA,SAAO,OAAO;AACdA,sBAAA,MAAA,MAAA,SAAA,2CAAc,wBAAwB,KAAK;AAC3CA,sBAAAA,MAAI,UAAU;AAAA,UACZ,OAAO;AAAA,UACP,MAAM;AAAA,QACR,CAAC;AAAA,MACH;AAAA,IACF;AAEAA,kBAAAA,MAAA,MAAA,OAAA,2CAAY,2BAA2B;AAAA,EACxC;AAAA,EACD,YAAY;AACVA,kBAAAA,MAAA,MAAA,OAAA,2CAAY,4BAA4B;AACxC,SAAK,gBAAe;AAEpBA,kBAAAA,MAAI,IAAI,oBAAoB,CAAC,aAAa;AACxCA,kFAAY,qBAAqB,QAAQ;AACzC,WAAK,MAAM,QAAQ,QAAQ;AAC3B,WAAK,UAAS;AAEd,UAAI,KAAK,cAAc,OAAO;AAC5B,aAAK,YAAY;AAAA,MACnB;AAAA,IACF,CAAC;AAAA,EACF;AAAA,EACD,cAAc;AACZA,kBAAAA,MAAA,MAAA,OAAA,2CAAY,8BAA8B;AAC1CA,wBAAI,KAAK,kBAAkB;AAAA,EAC7B;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1dA,GAAG,WAAW,eAAe;"}