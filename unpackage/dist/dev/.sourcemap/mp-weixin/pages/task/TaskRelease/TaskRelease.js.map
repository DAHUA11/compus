{"version":3,"file":"TaskRelease.js","sources":["pages/task/TaskRelease/TaskRelease.vue","../../../Software/hbuilder/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvdGFzay9UYXNrUmVsZWFzZS9UYXNrUmVsZWFzZS52dWU"],"sourcesContent":["<template>\n<view class=\"container\">\n<!-- 顶部标题 -->\n<view class=\"header\">\n<view class=\"title\">常用任务</view>\n</view>\n<!-- 常用任务标签区 -->\n<scroll-view class=\"quick-tasks\" scroll-x>\n<view class=\"task-tags\">\n<view class=\"tag\" v-for=\"(tag, index) in quickTasks\" :key=\"index\" @tap=\"handleQuickTask(tag.type)\">\n<view class=\"icon-circle\">\n  <uni-icons :type=\"tag.icon\" size=\"24\" :color=\"tag.color\" />\n</view>\n<text>{{ tag.name }}</text>\n</view>\n</view>\n</scroll-view>\n<!-- 主要任务类型区域 -->\n<view class=\"task-types\">\n<view class=\"section-title\">发布任务</view>\n<view\nclass=\"task-card\"\nv-for=\"(task, index) in taskTypes\"\n:key=\"index\"\n:class=\"{ active: selectedTask === task.type }\"\n@tap=\"handleSelectTask(task.type)\"\n>\n<view class=\"task-icon\" :style=\"{ backgroundColor: task.color + '45' }\">\n<uni-icons :type=\"task.icon\" size=\"32\" :color=\"task.color\" />\n</view>\n<view class=\"task-info\">\n<view class=\"task-name\">{{ task.name }}</view>\n  <view class=\"task-desc\">{{ task.description }}</view>\n</view>\n<view class=\"task-arrow\">\n  <uni-icons type=\"right\" size=\"23\" color=\"#999\" />\n</view>\n</view>\n</view>\n</view>\n\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      selectedTask: '',\n      quickTasks: [\n        { name: '代拿快递', type: 'express', icon: 'gift', color: '#3498db' },\n        { name: '卖闲置书', type: 'book', icon: 'paperplane', color: '#2ecc71' },\n      ],\n      taskTypes: [\n        {\n          name: '出物',\n          type: 'sell',\n          description: '出售你的闲置物品，让它们找到新主人',\n          icon: 'shop',\n          color: '#3498db'\n        },\n        {\n          name: '求购',\n          type: 'buy',\n          description: '发布你的需求，快速找到心仪物品',\n          icon: 'cart',\n          color: '#2ecc71'\n        },\n        {\n          name: '以物换物',\n          type: 'exchange',\n          description: '用闲置物品交换你需要的东西，各取所需',\n          icon: 'refresh',\n          color: '#9b59b6'\n        },\n        {\n          name: '快递代拿',\n          type: 'express',\n          description: '找人代取快递，省时又省力',\n          icon: 'gift',\n          color: '#e67e22'\n        },\n        {\n          name: '外卖代拿',\n          type: 'takeout',\n          description: '找人代取外卖，美食即刻享用',\n          icon: 'location',\n          color: '#e74c3c'\n        }\n      ],\n      taskList: [\n        {\n          id: 1,\n          name: '外卖代拿',\n          description: '代取外卖，快速送达',\n          icon: 'shop',\n          color: '#FF9F1C',\n          path: '/pages/task/TaskRelease/TakeoutTask/TakeoutTask'\n        },\n        {\n          id: 2,\n          name: '快递代取',\n          description: '代取快递，安全可靠',\n          icon: 'car',\n          color: '#00BFFF',\n          path: '/pages/task/TaskRelease/DeliveryTask/DeliveryTask'\n        },\n        {\n          id: 3,\n          name: '物品交换',\n          description: '物品交换，互惠互利',\n          icon: 'refresh',\n          color: '#47B960',\n          path: '/pages/task/TaskRelease/ExchangeTask/ExchangeTask'\n        },\n        {\n          id: 4,\n          name: '求购服务',\n          description: '代购商品，方便快捷',\n          icon: 'cart',\n          color: '#FF6B6B',\n          path: '/pages/task/TaskRelease/PurchaseTask/PurchaseTask'\n        },\n        {\n          id: 5,\n          name: '出物服务',\n          description: '外出代办，省时省力',\n          icon: 'location',\n          color: '#9C27B0',\n          path: '/pages/task/TaskRelease/OutTask/OutTask'\n        }\n      ]\n    }\n  },\n  methods: {\n    handleQuickTask(type) {\n      this.selectedTask = type;\n      // 这里可以直接跳转到对应的发布页面\n    },\n\n    handleSelectTask(type) {\n      this.selectedTask = type;\n      \n      // 根据任务类型跳转到对应页面\n      const taskMap = {\n        'sell': '/pages/task/TaskRelease/OutTask/OutTask',\n        'buy': '/pages/task/TaskRelease/PurchaseTask/PurchaseTask',\n        'exchange': '/pages/task/TaskRelease/ExchangeTask/ExchangeTask',\n        'express': '/pages/task/TaskRelease/DeliveryTask/DeliveryTask',\n        'takeout': '/pages/task/TaskRelease/TakeoutTask/TakeoutTask'\n      };\n\n      const targetPath = taskMap[type];\n      if (targetPath) {\n        uni.navigateTo({\n          url: targetPath,\n          success: () => {\n            console.log('跳转成功:', type);\n          },\n          fail: (err) => {\n            console.error('跳转失败:', err);\n            uni.showToast({\n              title: '页面跳转失败',\n              icon: 'none'\n            });\n          }\n        });\n      }\n    },\n\n    handleTaskClick(task) {\n      uni.navigateTo({\n        url: task.path,\n        success: () => {\n          console.log('跳转成功:', task.name);\n        },\n        fail: (err) => {\n          console.error('跳转失败:', err);\n          uni.showToast({\n            title: '页面跳转失败',\n            icon: 'none'\n          });\n        }\n      });\n    },\n\n    getCurrentUser() {\n      const TEST_MODE = true; // 确保这里的TEST_MODE也为true\n      const TEST_USER = {\n        publisher: {\n          id: 'test_publisher_id',\n          nickname: '测试发布者',\n          avatar: '/static/avatar/default.png'\n        },\n        claimer: {\n          id: 'test_claimer_id',\n          nickname: '测试接单者',\n          avatar: '/static/avatar/default.png'\n        },\n        user: {\n          id: 'test_user_id',\n          nickname: '测试用户',\n          avatar: '/static/avatar/default.png'\n        }\n      };\n      \n      if (TEST_MODE) {\n        const testRole = uni.getStorageSync('testRole') || 'user';\n        return TEST_USER[testRole] || TEST_USER.user;\n      } else {\n        return {\n          id: uni.getStorageSync('userId'),\n          nickname: uni.getStorageSync('userNickname'),\n          avatar: uni.getStorageSync('userAvatar')\n        };\n      }\n    },\n\n    async submitTask() {\n      try {\n        // 表单验证\n        if (!this.validateForm()) {\n          return;\n        }\n\n        // 构建任务数据\n        const taskData = {\n          id: Date.now(), // 临时ID，实际应该由后端生成\n          type: this.taskType,\n          title: this.title,\n          description: this.description,\n          reward: Number(this.reward),\n          publishTime: new Date().toLocaleString(),\n          status: 'pending',\n          tags: this.isUrgent ? ['加急'] : [],\n          // 根据任务类型添加特定字段\n          ...(this.taskType === 'express' || this.taskType === 'takeout' ? {\n            pickupAddress: this.pickupAddress,\n            deliveryAddress: this.deliveryAddress,\n            expectedDeliveryTime: this.expectedDeliveryTime\n          } : {}),\n          ...(this.taskType === 'buy' || this.taskType === 'sell' ? {\n            itemName: this.itemName,\n            selectedCondition: this.selectedCondition,\n            price: Number(this.price)\n          } : {}),\n          // 添加发布者信息，使用getCurrentUser()获取\n          publisher: this.getCurrentUser()\n        };\n\n        console.log('发布任务:', taskData);\n\n        // 将任务数据传递给TaskHall和MyTask页面\n        const taskInfo = encodeURIComponent(JSON.stringify(taskData));\n        \n        // 使用事件总线发送任务数据\n        uni.$emit('newTaskPublished', taskData);\n\n        // 显示成功提示\n        uni.showToast({\n          title: '发布成功',\n          icon: 'success',\n          duration: 2000\n        });\n\n        // 延迟跳转，让用户看到成功提示\n        setTimeout(() => {\n          // 跳转到任务大厅，并传递任务数据\n          uni.switchTab({\n            url: '/pages/task/TaskHall/TaskHall',\n            success: () => {\n              console.log('跳转到任务大厅成功');\n              // 在跳转成功后，通过事件总线传递任务数据\n              uni.$emit('newTaskPublished', taskData);\n            },\n            fail: (err) => {\n              console.error('跳转失败:', err);\n              uni.showToast({\n                title: '页面跳转失败',\n                icon: 'none'\n              });\n            }\n          });\n        }, 1500);\n\n      } catch (error) {\n        console.error('发布任务失败:', error);\n        uni.showToast({\n          title: '发布失败，请重试',\n          icon: 'error'\n        });\n      }\n    }\n  }\n}\n</script>\n\n<style>\npage {\nheight: 100%;\n}\n.container {\nmin-height: 100%;\nbackground-color: #f5f5f5;\ndisplay: flex;\nflex-direction: column;\n}\n.header {\npadding: 30rpx;\nbackground-color: #ffffff;\n}\n.title {\nfont-size: 18px;\nfont-weight: 600;\ncolor: #333333;\n}\n.quick-tasks {\nbackground-color: #ffffff;\npadding: 20rpx 30rpx;\nwhite-space: nowrap;\n}\n.task-tags {\ndisplay: flex;\nflex-direction: row;\npadding: 10rpx 0;\nwhite-space: nowrap;\n}\n.tag {\ndisplay: inline-flex;\nflex-direction: column;\nalign-items: center;\npadding: 12rpx;\nmargin-right: 30rpx;\n}\n.icon-circle {\nwidth: 96rpx;\nheight: 96rpx;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nbackground-color: #f8f8f8;\nborder-radius: 50%;\nmargin-bottom: 8rpx;\n}\n.tag text {\nfont-size: 12px;\ncolor: #666666;\n}\n.task-types {\npadding: 30rpx;\n}\n.section-title {\nfont-size: 18px;\nfont-weight: 600;\ncolor: #333333;\nmargin-bottom: 20rpx;\n}\n.task-card {\ndisplay: flex;\nflex-direction: row;\nalign-items: center;\njustify-content: space-between;\npadding: 30rpx;\nbackground-color: #ffffff;\nborder-radius: 16rpx;\nmargin-bottom: 20rpx;\ntransition: all 0.3s ease;\n}\n.task-card.active {\ntransform: scale(1.02);\n}\n.task-icon {\nwidth: 72rpx;\nheight: 72rpx;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nborder-radius: 16rpx;\nmargin-right: 24rpx;\nflex-shrink: 0;\n}\n.task-info {\nflex: 1;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\npadding-left: 0;\n}\n.task-name {\nfont-size: 16px;\nfont-weight: 500;\ncolor: #333333;\nmargin-bottom: 4rpx;\n}\n.task-desc {\nfont-size: 14px;\ncolor: #999999;\n}\n.task-arrow {\nmargin-left: 20rpx;\nflex-shrink: 0;\ndisplay: flex;\nalign-items: center;\n}\n</style>\n","import MiniProgramPage from 'D:/2大花/毕业设计/Compus/pages/task/TaskRelease/TaskRelease.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni"],"mappings":"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"}